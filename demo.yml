# The configurations that used for the recording, feel free to edit them
config:

  # Specify a command to be executed
  # like `/bin/bash -l`, `ls`, or any other commands
  # the default is bash for Linux
  # or powershell.exe for Windows
  command: bash -l

  # Specify the current working directory path
  # the default is the current working directory path
  cwd: .

  # Export additional ENV variables
  env:
    recording: true

  # Explicitly set the number of columns
  # or use `auto` to take the current
  # number of columns of your shell
  cols: 100

  # Explicitly set the number of rows
  # or use `auto` to take the current
  # number of rows of your shell
  rows: 50

  # Amount of times to repeat GIF
  # If value is -1, play once
  # If value is 0, loop indefinitely
  # If value is a positive number, loop n times
  repeat: 0

  # Quality
  # 1 - 100
  quality: 100

  # Delay between frames in ms
  # If the value is `auto` use the actual recording delays
  frameDelay: auto

  # Maximum delay between frames in ms
  # Ignored if the `frameDelay` isn't set to `auto`
  # Set to `auto` to prevent limiting the max idle time
  maxIdleTime: 10000

  # The surrounding frame box
  # The `type` can be null, window, floating, or solid`
  # To hide the title use the value null
  # Don't forget to add a backgroundColor style with a null as type
  frameBox:
    type: floating
    title: onnx2tf demo
    style:
      border: 0px black solid
      # boxShadow: none
      # margin: 0px

  # Add a watermark image to the rendered gif
  # You need to specify an absolute path for
  # the image on your machine or a URL, and you can also
  # add your own CSS styles
  watermark:
    imagePath: null
    style:
      position: absolute
      right: 10px
      bottom: 10px
      width: 100px
      opacity: 0.9

  # Cursor style can be one of
  # `block`, `underline`, or `bar`
  cursorStyle: block

  # Font family
  # You can use any font that is installed on your machine
  # in CSS-like syntax
  fontFamily: "Monaco, Lucida Console, Ubuntu Mono, Monospace"

  # The size of the font
  fontSize: 20

  # The height of lines
  lineHeight: 1

  # The spacing between letters
  letterSpacing: 0

  # Theme
  theme:
    background: "#000000" #"transparent"
    foreground: "#afafaf"
    cursor: "#c7c7c7"
    black: "#232628"
    red: "#fc4384"
    green: "#b3e33b"
    yellow: "#ffa727"
    blue: "#75dff2"
    magenta: "#ae89fe"
    cyan: "#708387"
    white: "#d5d5d0"
    brightBlack: "#626566"
    brightRed: "#ff7fac"
    brightGreen: "#c8ed71"
    brightYellow: "#ebdf86"
    brightBlue: "#75dff2"
    brightMagenta: "#ae89fe"
    brightCyan: "#b1c6ca"
    brightWhite: "#f9f9f4"

# Records, feel free to edit them
records:
  - delay: 300
    content: "\e]0;xxxxx@ubuntu2004:~/demo\e\\\e]7;file://ubuntu2004/home/xxxxx/demo\e\\\e]0;xxxxx@ubuntu2004: ~/demo\a\e[01;32m\e[01;34m~/demo\e[00m$ "
  - delay: 3000
    content: o
  - delay: 100
    content: 'n'
  - delay: 100
    content: 'n'
  - delay: 100
    content: x
  - delay: 100
    content: '2'
  - delay: 100
    content: t
  - delay: 100
    content: f
  - delay: 100
    content: ' '
  - delay: 100
    content: '-'
  - delay: 100
    content: i
  - delay: 100
    content: ' '
  - delay: 100
    content: 'y'
  - delay: 100
    content: o
  - delay: 100
    content: l
  - delay: 100
    content: o
  - delay: 100
    content: v
  - delay: 100
    content: '7'
  - delay: 100
    content: _
  - delay: 100
    content: t
  - delay: 100
    content: i
  - delay: 100
    content: 'n'
  - delay: 100
    content: 'y'
  - delay: 100
    content: _
  - delay: 100
    content: h
  - delay: 100
    content: e
  - delay: 100
    content: a
  - delay: 100
    content: d
  - delay: 100
    content: _
  - delay: 100
    content: '0'
  - delay: 100
    content: .
  - delay: 100
    content: '7'
  - delay: 100
    content: '6'
  - delay: 100
    content: '8'
  - delay: 100
    content: _
  - delay: 100
    content: p
  - delay: 100
    content: o
  - delay: 100
    content: s
  - delay: 100
    content: t
  - delay: 100
    content: _
  - delay: 100
    content: '4'
  - delay: 100
    content: '8'
  - delay: 100
    content: '0'
  - delay: 100
    content: x
  - delay: 100
    content: '6'
  - delay: 100
    content: '4'
  - delay: 100
    content: '0'
  - delay: 100
    content: .
  - delay: 100
    content: o
  - delay: 100
    content: 'n'
  - delay: 100
    content: 'n'
  - delay: 100
    content: x
  - delay: 3000
    content: "\r\n"
  - delay: 300
    content: "\r\n\e[07mModel optimizing started\e[0m ============================================================\r\n"
  - delay: 1000
    content: "Simplifying...\r\nFinish! Here is the difference:\r\n┏━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┓\r\n┃                   ┃ Original Model ┃ Simplified Model ┃\r\n┡━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━┩\r\n│ Add               │ 5              │ 5                │\r\n│ Cast              │ 1              │ 1                │\r\n│ Concat            │ 20             │ 20               │\r\n│ Conv              │ 58             │ 58               │\r\n│ Div               │ 4              │ 4                │\r\n│ Gather            │ 11             │ 11               │\r\n│ GatherND          │ 2              │ 2                │\r\n│ LeakyRelu         │ 55             │ 55               │\r\n│ MaxPool           │ 6              │ 6                │\r\n│ Mul               │ 7              │ 7                │\r\n│ NonMaxSuppression │ 1              │ 1                │\r\n│ Pow               │ 3              │ 3                │\r\n│ Reshape           │ 7              │ 7                │\r\n│ Resize            │ 2              │ 2                │\r\n│ Sigmoid           │ 3              │ 3                │\r\n│ Slice             │ 3              │ 3                │\r\n│ Split             │ 3              │ 3                │\r\n│ Sub               │ 2              │ 2                │\r\n│ Transpose         │ 4              │ 4                │\r\n│ Unsqueeze         │ 6              │ 6                │\r\n│ Model Size        │ 23.0MiB        │ 23.0MiB          │\r\n└───────────────────┴────────────────┴──────────────────┘\r\n\r\n"
  - delay: 300
    content: "Simplifying...\r\nFinish! Here is the difference:\r\n┏━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┓\r\n┃                   ┃ Original Model ┃ Simplified Model ┃\r\n┡━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━┩\r\n│ Add               │ 5              │ 5                │\r\n│ Cast              │ 1              │ 1                │\r\n│ Concat            │ 20             │ 20               │\r\n│ Conv              │ 58             │ 58               │\r\n│ Div               │ 4              │ 4                │\r\n│ Gather            │ 11             │ 11               │\r\n│ GatherND          │ 2              │ 2                │\r\n│ LeakyRelu         │ 55             │ 55               │\r\n│ MaxPool           │ 6              │ 6                │\r\n│ Mul               │ 7              │ 7                │\r\n│ NonMaxSuppression │ 1              │ 1                │\r\n│ Pow               │ 3              │ 3                │\r\n│ Reshape           │ 7              │ 7                │\r\n│ Resize            │ 2              │ 2                │\r\n│ Sigmoid           │ 3              │ 3                │\r\n│ Slice             │ 3              │ 3                │\r\n│ Split             │ 3              │ 3                │\r\n│ Sub               │ 2              │ 2                │\r\n│ Transpose         │ 4              │ 4                │\r\n│ Unsqueeze         │ 6              │ 6                │\r\n│ Model Size        │ 23.0MiB        │ 23.0MiB          │\r\n└───────────────────┴────────────────┴──────────────────┘\r\n\r\n"
  - delay: 300
    content: "Simplifying...\r\nFinish! Here is the difference:\r\n┏━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┓\r\n┃                   ┃ Original Model ┃ Simplified Model ┃\r\n┡━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━┩\r\n│ Add               │ 5              │ 5                │\r\n│ Cast              │ 1              │ 1                │\r\n│ Concat            │ 20             │ 20               │\r\n│ Conv              │ 58             │ 58               │\r\n│ Div               │ 4              │ 4                │\r\n│ Gather            │ 11             │ 11               │\r\n│ GatherND          │ 2              │ 2                │\r\n│ LeakyRelu         │ 55             │ 55               │\r\n│ MaxPool           │ 6              │ 6                │\r\n│ Mul               │ 7              │ 7                │\r\n│ NonMaxSuppression │ 1              │ 1                │\r\n│ Pow               │ 3              │ 3                │\r\n│ Reshape           │ 7              │ 7                │\r\n│ Resize            │ 2              │ 2                │\r\n│ Sigmoid           │ 3              │ 3                │\r\n│ Slice             │ 3              │ 3                │\r\n│ Split             │ 3              │ 3                │\r\n│ Sub               │ 2              │ 2                │\r\n│ Transpose         │ 4              │ 4                │\r\n│ Unsqueeze         │ 6              │ 6                │\r\n│ Model Size        │ 23.0MiB        │ 23.0MiB          │\r\n└───────────────────┴────────────────┴──────────────────┘\r\n\r\n\e[32mModel optimizing complete!\e[0m\r\n"
  - delay: 200
    content: "\r\n\e[07mModel loaded\e[0m ========================================================================\r\n\r\n\e[07mModel convertion started\e[0m ============================================================\r\n\e[32mINFO:\e[0m \e[32minput_op_name\e[0m: input \e[32mshape\e[0m: [1, 3, 480, 640] \e[32mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_5\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input \e[36mshape\e[0m: [1, 3, 480, 640] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.0.conv.weight \e[36mshape\e[0m: [32, 3, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.0.conv.bias \e[36mshape\e[0m: [32] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.1 \e[36mshape\e[0m: [1, 32, 240, 320] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad/Pad:0 \e[34mshape\e[0m: (1, 482, 642, 3) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 3, 32) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (32,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [2, 2] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add/Add:0 \e[34mshape\e[0m: (1, 240, 320, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_6\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.1 \e[36mshape\e[0m: [1, 32, 240, 320] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_128 \e[36mshape\e[0m: [1, 32, 240, 320] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add/Add:0 \e[34mshape\e[0m: (1, 240, 320, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu/LeakyRelu:0 \e[34mshape\e[0m: (1, 240, 320, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_7\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_128 \e[36mshape\e[0m: [1, 32, 240, 320] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.1.conv.weight \e[36mshape\e[0m: [64, 32, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.1.conv.bias \e[36mshape\e[0m: [64] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.4 \e[36mshape\e[0m: [1, 64, 120, 160] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_1/Pad:0 \e[34mshape\e[0m: (1, 242, 322, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 32, 64) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (64,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [2, 2] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_1/Add:0 \e[34mshape\e[0m: (1, 120, 160, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_8\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.4 \e[36mshape\e[0m: [1, 64, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_130 \e[36mshape\e[0m: [1, 64, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_1/Add:0 \e[34mshape\e[0m: (1, 120, 160, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_1/LeakyRelu:0 \e[34mshape\e[0m: (1, 120, 160, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_9\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_130 \e[36mshape\e[0m: [1, 64, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.2.conv.weight \e[36mshape\e[0m: [32, 64, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.2.conv.bias \e[36mshape\e[0m: [32] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.8 \e[36mshape\e[0m: [1, 32, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_1/LeakyRelu:0 \e[34mshape\e[0m: (1, 120, 160, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 64, 32) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (32,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_2/Add:0 \e[34mshape\e[0m: (1, 120, 160, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_11\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_130 \e[36mshape\e[0m: [1, 64, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.3.conv.weight \e[36mshape\e[0m: [32, 64, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.3.conv.bias \e[36mshape\e[0m: [32] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.12 \e[36mshape\e[0m: [1, 32, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_1/LeakyRelu:0 \e[34mshape\e[0m: (1, 120, 160, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 64, 32) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (32,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_3/Add:0 \e[34mshape\e[0m: (1, 120, 160, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_10\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.8 \e[36mshape\e[0m: [1, 32, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_132 \e[36mshape\e[0m: [1, 32, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_2/Add:0 \e[34mshape\e[0m: (1, 120, 160, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_2/LeakyRelu:0 \e[34mshape\e[0m: (1, 120, 160, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_12\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.12 \e[36mshape\e[0m: [1, 32, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_134 \e[36mshape\e[0m: [1, 32, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_3/Add:0 \e[34mshape\e[0m: (1, 120, 160, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_3/LeakyRelu:0 \e[34mshape\e[0m: (1, 120, 160, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_13\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_134 \e[36mshape\e[0m: [1, 32, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.4.conv.weight \e[36mshape\e[0m: [32, 32, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.4.conv.bias \e[36mshape\e[0m: [32] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.16 \e[36mshape\e[0m: [1, 32, 120, 160] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_2/Pad:0 \e[34mshape\e[0m: (1, 122, 162, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 32, 32) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (32,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_4/Add:0 \e[34mshape\e[0m: (1, 120, 160, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_14\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.16 \e[36mshape\e[0m: [1, 32, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_136 \e[36mshape\e[0m: [1, 32, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_4/Add:0 \e[34mshape\e[0m: (1, 120, 160, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_4/LeakyRelu:0 \e[34mshape\e[0m: (1, 120, 160, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_15\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_136 \e[36mshape\e[0m: [1, 32, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.5.conv.weight \e[36mshape\e[0m: [32, 32, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.5.conv.bias \e[36mshape\e[0m: [32] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.20 \e[36mshape\e[0m: [1, 32, 120, 160] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_3/Pad:0 \e[34mshape\e[0m: (1, 122, 162, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 32, 32) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (32,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_5/Add:0 \e[34mshape\e[0m: (1, 120, 160, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_16\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.20 \e[36mshape\e[0m: [1, 32, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_138 \e[36mshape\e[0m: [1, 32, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_5/Add:0 \e[34mshape\e[0m: (1, 120, 160, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_5/LeakyRelu:0 \e[34mshape\e[0m: (1, 120, 160, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Concat \e[35monnx_op_name\e[0m: Concat_17\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Concat_138 \e[36mshape\e[0m: [1, 32, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Conv_136 \e[36mshape\e[0m: [1, 32, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: onnx::Conv_134 \e[36mshape\e[0m: [1, 32, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.4\e[0m: onnx::Concat_132 \e[36mshape\e[0m: [1, 32, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.24 \e[36mshape\e[0m: [1, 128, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: concat\r\n\e[32mINFO:\e[0m \e[34minput.1.input0\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_5/LeakyRelu:0 \e[34mshape\e[0m: (1, 120, 160, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.input1\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_4/LeakyRelu:0 \e[34mshape\e[0m: (1, 120, 160, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.3.input2\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_3/LeakyRelu:0 \e[34mshape\e[0m: (1, 120, 160, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.4.input3\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_2/LeakyRelu:0 \e[34mshape\e[0m: (1, 120, 160, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.5.axis\e[0m: \e[34mval\e[0m: 3 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.concat/concat:0 \e[34mshape\e[0m: (1, 120, 160, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_18\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.24 \e[36mshape\e[0m: [1, 128, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.7.conv.weight \e[36mshape\e[0m: [64, 128, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.7.conv.bias \e[36mshape\e[0m: [64] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.28 \e[36mshape\e[0m: [1, 64, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.concat/concat:0 \e[34mshape\e[0m: (1, 120, 160, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 128, 64) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (64,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_6/Add:0 \e[34mshape\e[0m: (1, 120, 160, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_19\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.28 \e[36mshape\e[0m: [1, 64, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::MaxPool_141 \e[36mshape\e[0m: [1, 64, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_6/Add:0 \e[34mshape\e[0m: (1, 120, 160, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_6/LeakyRelu:0 \e[34mshape\e[0m: (1, 120, 160, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: MaxPool \e[35monnx_op_name\e[0m: MaxPool_20\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::MaxPool_141 \e[36mshape\e[0m: [1, 64, 120, 160] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.32 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: max_pool_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_6/LeakyRelu:0 \e[34mshape\e[0m: (1, 120, 160, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.filters\e[0m: \r\n\e[32mINFO:\e[0m \e[34minput.3.kernel_shape\e[0m: \e[34mval\e[0m: [2, 2] \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [2, 2] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.ceil_mode\e[0m: \e[34mval\e[0m: False \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.max_pool2d/MaxPool2d:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_21\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.32 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.9.conv.weight \e[36mshape\e[0m: [64, 64, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.9.conv.bias \e[36mshape\e[0m: [64] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.36 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.max_pool2d/MaxPool2d:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 64, 64) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (64,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_7/Add:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_23\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.32 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.10.conv.weight \e[36mshape\e[0m: [64, 64, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.10.conv.bias \e[36mshape\e[0m: [64] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.40 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.max_pool2d/MaxPool2d:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 64, 64) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (64,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_8/Add:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_22\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.36 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_144 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_7/Add:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_7/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_24\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.40 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_146 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_8/Add:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_8/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_25\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_146 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.11.conv.weight \e[36mshape\e[0m: [64, 64, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.11.conv.bias \e[36mshape\e[0m: [64] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.44 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_4/Pad:0 \e[34mshape\e[0m: (1, 62, 82, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 64, 64) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (64,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_9/Add:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_26\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.44 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_148 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_9/Add:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_9/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_27\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_148 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.12.conv.weight \e[36mshape\e[0m: [64, 64, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.12.conv.bias \e[36mshape\e[0m: [64] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.48 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_5/Pad:0 \e[34mshape\e[0m: (1, 62, 82, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 64, 64) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (64,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_10/Add:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_28\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.48 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_150 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_10/Add:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_10/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Concat \e[35monnx_op_name\e[0m: Concat_29\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Concat_150 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Conv_148 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: onnx::Conv_146 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.4\e[0m: onnx::Concat_144 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.52 \e[36mshape\e[0m: [1, 256, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: concat\r\n\e[32mINFO:\e[0m \e[34minput.1.input0\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_10/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.input1\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_9/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.3.input2\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_8/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.4.input3\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_7/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.5.axis\e[0m: \e[34mval\e[0m: 3 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.concat_1/concat:0 \e[34mshape\e[0m: (1, 60, 80, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_30\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.52 \e[36mshape\e[0m: [1, 256, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.14.conv.weight \e[36mshape\e[0m: [128, 256, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.14.conv.bias \e[36mshape\e[0m: [128] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.56 \e[36mshape\e[0m: [1, 128, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.concat_1/concat:0 \e[34mshape\e[0m: (1, 60, 80, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 256, 128) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (128,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_11/Add:0 \e[34mshape\e[0m: (1, 60, 80, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_31\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.56 \e[36mshape\e[0m: [1, 128, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::MaxPool_153 \e[36mshape\e[0m: [1, 128, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_11/Add:0 \e[34mshape\e[0m: (1, 60, 80, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_11/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: MaxPool \e[35monnx_op_name\e[0m: MaxPool_32\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::MaxPool_153 \e[36mshape\e[0m: [1, 128, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.60 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: max_pool_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_11/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.filters\e[0m: \r\n\e[32mINFO:\e[0m \e[34minput.3.kernel_shape\e[0m: \e[34mval\e[0m: [2, 2] \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [2, 2] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.ceil_mode\e[0m: \e[34mval\e[0m: False \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.max_pool2d_1/MaxPool2d:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_91\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::MaxPool_153 \e[36mshape\e[0m: [1, 128, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.50.conv.weight \e[36mshape\e[0m: [64, 128, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.50.conv.bias \e[36mshape\e[0m: [64] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.180 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_11/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 128, 64) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (64,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_12/Add:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_33\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.60 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.16.conv.weight \e[36mshape\e[0m: [128, 128, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.16.conv.bias \e[36mshape\e[0m: [128] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.64 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.max_pool2d_1/MaxPool2d:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 128, 128) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (128,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_13/Add:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_35\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.60 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.17.conv.weight \e[36mshape\e[0m: [128, 128, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.17.conv.bias \e[36mshape\e[0m: [128] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.68 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.max_pool2d_1/MaxPool2d:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 128, 128) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (128,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_14/Add:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_92\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.180 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_220 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_12/Add:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_12/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_34\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.64 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_156 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_13/Add:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_13/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_36\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.68 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_158 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_14/Add:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_14/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_37\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_158 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.18.conv.weight \e[36mshape\e[0m: [128, 128, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.18.conv.bias \e[36mshape\e[0m: [128] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.72 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_6/Pad:0 \e[34mshape\e[0m: (1, 32, 42, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 128, 128) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (128,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_15/Add:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_38\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.72 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_160 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_15/Add:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_15/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_39\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_160 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.19.conv.weight \e[36mshape\e[0m: [128, 128, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.19.conv.bias \e[36mshape\e[0m: [128] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.76 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_7/Pad:0 \e[34mshape\e[0m: (1, 32, 42, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 128, 128) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (128,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_16/Add:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_40\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.76 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_162 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_16/Add:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_16/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Concat \e[35monnx_op_name\e[0m: Concat_41\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Concat_162 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Conv_160 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: onnx::Conv_158 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.4\e[0m: onnx::Concat_156 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.80 \e[36mshape\e[0m: [1, 512, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: concat\r\n\e[32mINFO:\e[0m \e[34minput.1.input0\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_16/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.input1\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_15/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.3.input2\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_14/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.4.input3\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_13/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.5.axis\e[0m: \e[34mval\e[0m: 3 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.concat_2/concat:0 \e[34mshape\e[0m: (1, 30, 40, 512) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_42\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.80 \e[36mshape\e[0m: [1, 512, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.21.conv.weight \e[36mshape\e[0m: [256, 512, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.21.conv.bias \e[36mshape\e[0m: [256] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.84 \e[36mshape\e[0m: [1, 256, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.concat_2/concat:0 \e[34mshape\e[0m: (1, 30, 40, 512) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 512, 256) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (256,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_17/Add:0 \e[34mshape\e[0m: (1, 30, 40, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_43\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.84 \e[36mshape\e[0m: [1, 256, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::MaxPool_165 \e[36mshape\e[0m: [1, 256, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_17/Add:0 \e[34mshape\e[0m: (1, 30, 40, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_17/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: MaxPool \e[35monnx_op_name\e[0m: MaxPool_44\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::MaxPool_165 \e[36mshape\e[0m: [1, 256, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.88 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: max_pool_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_17/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.filters\e[0m: \r\n\e[32mINFO:\e[0m \e[34minput.3.kernel_shape\e[0m: \e[34mval\e[0m: [2, 2] \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [2, 2] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.ceil_mode\e[0m: \e[34mval\e[0m: False \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.max_pool2d_2/MaxPool2d:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_73\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::MaxPool_165 \e[36mshape\e[0m: [1, 256, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.40.conv.weight \e[36mshape\e[0m: [128, 256, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.40.conv.bias \e[36mshape\e[0m: [128] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.144 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_17/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 256, 128) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (128,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_18/Add:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_45\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.88 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.23.conv.weight \e[36mshape\e[0m: [256, 256, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.23.conv.bias \e[36mshape\e[0m: [256] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.92 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.max_pool2d_2/MaxPool2d:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 256, 256) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (256,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_19/Add:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_47\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.88 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.24.conv.weight \e[36mshape\e[0m: [256, 256, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.24.conv.bias \e[36mshape\e[0m: [256] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.96 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.max_pool2d_2/MaxPool2d:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 256, 256) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (256,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_20/Add:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_74\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.144 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_199 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_18/Add:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_18/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_46\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.92 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_168 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_19/Add:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_19/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_48\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.96 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_170 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_20/Add:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_20/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_49\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_170 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.25.conv.weight \e[36mshape\e[0m: [256, 256, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.25.conv.bias \e[36mshape\e[0m: [256] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.100 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_8/Pad:0 \e[34mshape\e[0m: (1, 17, 22, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 256, 256) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (256,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_21/Add:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_50\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.100 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_172 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_21/Add:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_21/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_51\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_172 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.26.conv.weight \e[36mshape\e[0m: [256, 256, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.26.conv.bias \e[36mshape\e[0m: [256] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.104 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_9/Pad:0 \e[34mshape\e[0m: (1, 17, 22, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 256, 256) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (256,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_22/Add:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_52\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.104 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_174 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_22/Add:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_22/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Concat \e[35monnx_op_name\e[0m: Concat_53\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Concat_174 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Conv_172 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: onnx::Conv_170 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.4\e[0m: onnx::Concat_168 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.108 \e[36mshape\e[0m: [1, 1024, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: concat\r\n\e[32mINFO:\e[0m \e[34minput.1.input0\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_22/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.input1\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_21/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.3.input2\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_20/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.4.input3\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_19/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.5.axis\e[0m: \e[34mval\e[0m: 3 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.concat_3/concat:0 \e[34mshape\e[0m: (1, 15, 20, 1024) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_54\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.108 \e[36mshape\e[0m: [1, 1024, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.28.conv.weight \e[36mshape\e[0m: [512, 1024, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.28.conv.bias \e[36mshape\e[0m: [512] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.112 \e[36mshape\e[0m: [1, 512, 15, 20] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.concat_3/concat:0 \e[34mshape\e[0m: (1, 15, 20, 1024) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 1024, 512) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (512,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_23/Add:0 \e[34mshape\e[0m: (1, 15, 20, 512) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_55\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.112 \e[36mshape\e[0m: [1, 512, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_177 \e[36mshape\e[0m: [1, 512, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_23/Add:0 \e[34mshape\e[0m: (1, 15, 20, 512) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_23/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 512) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_56\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_177 \e[36mshape\e[0m: [1, 512, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.29.conv.weight \e[36mshape\e[0m: [256, 512, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.29.conv.bias \e[36mshape\e[0m: [256] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.116 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_23/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 512) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 512, 256) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (256,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_24/Add:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_58\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_177 \e[36mshape\e[0m: [1, 512, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.30.conv.weight \e[36mshape\e[0m: [256, 512, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.30.conv.bias \e[36mshape\e[0m: [256] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.120 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_23/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 512) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 512, 256) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (256,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_25/Add:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_57\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.116 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_179 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_24/Add:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_24/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_59\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.120 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::MaxPool_181 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_25/Add:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_25/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: MaxPool \e[35monnx_op_name\e[0m: MaxPool_60\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::MaxPool_181 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_182 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: pool_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_25/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.filters\e[0m: \r\n\e[32mINFO:\e[0m \e[34minput.3.kernel_shape\e[0m: \e[34mval\e[0m: [5, 5] \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: SAME \r\n\e[32mINFO:\e[0m \e[34minput.7.ceil_mode\e[0m: \e[34mval\e[0m: False \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.compat.v1.nn.pool/max_pool:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: MaxPool \e[35monnx_op_name\e[0m: MaxPool_61\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::MaxPool_181 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_183 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: pool_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_25/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.filters\e[0m: \r\n\e[32mINFO:\e[0m \e[34minput.3.kernel_shape\e[0m: \e[34mval\e[0m: [9, 9] \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: SAME \r\n\e[32mINFO:\e[0m \e[34minput.7.ceil_mode\e[0m: \e[34mval\e[0m: False \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.compat.v1.nn.pool_1/max_pool:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: MaxPool \e[35monnx_op_name\e[0m: MaxPool_62\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::MaxPool_181 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_184 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: pool_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_25/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.filters\e[0m: \r\n\e[32mINFO:\e[0m \e[34minput.3.kernel_shape\e[0m: \e[34mval\e[0m: [13, 13] \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: SAME \r\n\e[32mINFO:\e[0m \e[34minput.7.ceil_mode\e[0m: \e[34mval\e[0m: False \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.compat.v1.nn.pool_2/max_pool:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Concat \e[35monnx_op_name\e[0m: Concat_63\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Concat_184 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Concat_183 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: onnx::Concat_182 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.4\e[0m: onnx::MaxPool_181 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.124 \e[36mshape\e[0m: [1, 1024, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: concat\r\n\e[32mINFO:\e[0m \e[34minput.1.input0\e[0m: \e[34mname\e[0m: tf.compat.v1.nn.pool_2/max_pool:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.input1\e[0m: \e[34mname\e[0m: tf.compat.v1.nn.pool_1/max_pool:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.3.input2\e[0m: \e[34mname\e[0m: tf.compat.v1.nn.pool/max_pool:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.4.input3\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_25/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.5.axis\e[0m: \e[34mval\e[0m: 3 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.concat_4/concat:0 \e[34mshape\e[0m: (1, 15, 20, 1024) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_64\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.124 \e[36mshape\e[0m: [1, 1024, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.35.conv.weight \e[36mshape\e[0m: [256, 1024, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.35.conv.bias \e[36mshape\e[0m: [256] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.128 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.concat_4/concat:0 \e[34mshape\e[0m: (1, 15, 20, 1024) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 1024, 256) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (256,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_26/Add:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_65\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.128 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_187 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_26/Add:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_26/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Concat \e[35monnx_op_name\e[0m: Concat_66\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Concat_187 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Concat_179 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.132 \e[36mshape\e[0m: [1, 512, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: concat\r\n\e[32mINFO:\e[0m \e[34minput.1.input0\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_26/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.input1\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_24/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.3.axis\e[0m: \e[34mval\e[0m: 3 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.concat_5/concat:0 \e[34mshape\e[0m: (1, 15, 20, 512) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_67\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.132 \e[36mshape\e[0m: [1, 512, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.37.conv.weight \e[36mshape\e[0m: [256, 512, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.37.conv.bias \e[36mshape\e[0m: [256] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.136 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.concat_5/concat:0 \e[34mshape\e[0m: (1, 15, 20, 512) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 512, 256) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (256,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_27/Add:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_68\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.136 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_190 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_27/Add:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_27/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_69\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_190 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.38.conv.weight \e[36mshape\e[0m: [128, 256, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.38.conv.bias \e[36mshape\e[0m: [128] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.140 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_27/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 256, 128) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (128,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_28/Add:0 \e[34mshape\e[0m: (1, 15, 20, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_70\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.140 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Resize_192 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_28/Add:0 \e[34mshape\e[0m: (1, 15, 20, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_28/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Resize \e[35monnx_op_name\e[0m: Resize_72\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Resize_192 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Resize_196 \e[36mshape\e[0m: [0] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: onnx::Resize_373 \e[36mshape\e[0m: [4] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_197 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: upsampling2d_nearest\r\n\e[32mINFO:\e[0m \e[34minput.1.images\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_28/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.boxes\e[0m: \r\n\e[32mINFO:\e[0m \e[34minput.3.box_indices\e[0m: \r\n\e[32mINFO:\e[0m \e[34minput.4.new_size/crop_size\e[0m: \e[34mshape\e[0m: (2,) \e[34mdtype\e[0m: <dtype: 'int32'> \r\n\e[32mINFO:\e[0m \e[34minput.5.method\e[0m: \e[34mval\e[0m: nearest \r\n\e[32mINFO:\e[0m \e[34minput.6.extrapolation_value\e[0m: \e[34mval\e[0m: 0.0 \r\n\e[32mINFO:\e[0m \e[34minput.7.align_corners\e[0m: \e[34mval\e[0m: False \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: lambda/Resize_72:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Concat \e[35monnx_op_name\e[0m: Concat_75\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Concat_199 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Concat_197 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.148 \e[36mshape\e[0m: [1, 256, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: concat\r\n\e[32mINFO:\e[0m \e[34minput.1.input0\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_18/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.input1\e[0m: \e[34mname\e[0m: lambda/Resize_72:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.3.axis\e[0m: \e[34mval\e[0m: 3 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.concat_6/concat:0 \e[34mshape\e[0m: (1, 30, 40, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_76\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.148 \e[36mshape\e[0m: [1, 256, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.42.conv.weight \e[36mshape\e[0m: [64, 256, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.42.conv.bias \e[36mshape\e[0m: [64] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.152 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.concat_6/concat:0 \e[34mshape\e[0m: (1, 30, 40, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 256, 64) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (64,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_29/Add:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_78\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.148 \e[36mshape\e[0m: [1, 256, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.43.conv.weight \e[36mshape\e[0m: [64, 256, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.43.conv.bias \e[36mshape\e[0m: [64] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.156 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.concat_6/concat:0 \e[34mshape\e[0m: (1, 30, 40, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 256, 64) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (64,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_30/Add:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_77\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.152 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_202 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_29/Add:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_29/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_79\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.156 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_204 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_30/Add:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_30/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_80\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_204 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.44.conv.weight \e[36mshape\e[0m: [64, 64, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.44.conv.bias \e[36mshape\e[0m: [64] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.160 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_10/Pad:0 \e[34mshape\e[0m: (1, 32, 42, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 64, 64) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (64,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_31/Add:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_81\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.160 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_206 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_31/Add:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_31/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_82\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_206 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.45.conv.weight \e[36mshape\e[0m: [64, 64, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.45.conv.bias \e[36mshape\e[0m: [64] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.164 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_11/Pad:0 \e[34mshape\e[0m: (1, 32, 42, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 64, 64) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (64,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_32/Add:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_83\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.164 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_208 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_32/Add:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_32/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Concat \e[35monnx_op_name\e[0m: Concat_84\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Concat_208 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Conv_206 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: onnx::Conv_204 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.4\e[0m: onnx::Concat_202 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.168 \e[36mshape\e[0m: [1, 256, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: concat\r\n\e[32mINFO:\e[0m \e[34minput.1.input0\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_32/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.input1\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_31/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.3.input2\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_30/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.4.input3\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_29/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.5.axis\e[0m: \e[34mval\e[0m: 3 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.concat_7/concat:0 \e[34mshape\e[0m: (1, 30, 40, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_85\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.168 \e[36mshape\e[0m: [1, 256, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.47.conv.weight \e[36mshape\e[0m: [128, 256, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.47.conv.bias \e[36mshape\e[0m: [128] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.172 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.concat_7/concat:0 \e[34mshape\e[0m: (1, 30, 40, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 256, 128) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (128,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_33/Add:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_86\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.172 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_211 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_33/Add:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_33/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_87\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_211 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.48.conv.weight \e[36mshape\e[0m: [64, 128, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.48.conv.bias \e[36mshape\e[0m: [64] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.176 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_33/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 128, 64) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (64,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_34/Add:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_88\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.176 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Resize_213 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_34/Add:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_34/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Resize \e[35monnx_op_name\e[0m: Resize_90\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Resize_213 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Resize_196 \e[36mshape\e[0m: (0,) \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: onnx::Resize_373 \e[36mshape\e[0m: (4,) \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_218 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: upsampling2d_nearest\r\n\e[32mINFO:\e[0m \e[34minput.1.images\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_34/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.boxes\e[0m: \r\n\e[32mINFO:\e[0m \e[34minput.3.box_indices\e[0m: \r\n\e[32mINFO:\e[0m \e[34minput.4.new_size/crop_size\e[0m: \e[34mshape\e[0m: (2,) \e[34mdtype\e[0m: <dtype: 'int32'> \r\n\e[32mINFO:\e[0m \e[34minput.5.method\e[0m: \e[34mval\e[0m: nearest \r\n\e[32mINFO:\e[0m \e[34minput.6.extrapolation_value\e[0m: \e[34mval\e[0m: 0.0 \r\n\e[32mINFO:\e[0m \e[34minput.7.align_corners\e[0m: \e[34mval\e[0m: False \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: lambda_1/Resize_90:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Concat \e[35monnx_op_name\e[0m: Concat_93\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Concat_220 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Concat_218 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.184 \e[36mshape\e[0m: [1, 128, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: concat\r\n\e[32mINFO:\e[0m \e[34minput.1.input0\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_12/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.input1\e[0m: \e[34mname\e[0m: lambda_1/Resize_90:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.3.axis\e[0m: \e[34mval\e[0m: 3 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.concat_8/concat:0 \e[34mshape\e[0m: (1, 60, 80, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_94\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.184 \e[36mshape\e[0m: [1, 128, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.52.conv.weight \e[36mshape\e[0m: [32, 128, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.52.conv.bias \e[36mshape\e[0m: [32] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.188 \e[36mshape\e[0m: [1, 32, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.concat_8/concat:0 \e[34mshape\e[0m: (1, 60, 80, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 128, 32) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (32,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_35/Add:0 \e[34mshape\e[0m: (1, 60, 80, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_96\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.184 \e[36mshape\e[0m: [1, 128, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.53.conv.weight \e[36mshape\e[0m: [32, 128, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.53.conv.bias \e[36mshape\e[0m: [32] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.192 \e[36mshape\e[0m: [1, 32, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.concat_8/concat:0 \e[34mshape\e[0m: (1, 60, 80, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 128, 32) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (32,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_36/Add:0 \e[34mshape\e[0m: (1, 60, 80, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_95\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.188 \e[36mshape\e[0m: [1, 32, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_223 \e[36mshape\e[0m: [1, 32, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_35/Add:0 \e[34mshape\e[0m: (1, 60, 80, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_35/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_97\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.192 \e[36mshape\e[0m: [1, 32, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_225 \e[36mshape\e[0m: [1, 32, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_36/Add:0 \e[34mshape\e[0m: (1, 60, 80, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_36/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_98\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_225 \e[36mshape\e[0m: [1, 32, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.54.conv.weight \e[36mshape\e[0m: [32, 32, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.54.conv.bias \e[36mshape\e[0m: [32] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.196 \e[36mshape\e[0m: [1, 32, 60, 80] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_12/Pad:0 \e[34mshape\e[0m: (1, 62, 82, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 32, 32) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (32,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_37/Add:0 \e[34mshape\e[0m: (1, 60, 80, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_99\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.196 \e[36mshape\e[0m: [1, 32, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_227 \e[36mshape\e[0m: [1, 32, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_37/Add:0 \e[34mshape\e[0m: (1, 60, 80, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_37/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_100\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_227 \e[36mshape\e[0m: [1, 32, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.55.conv.weight \e[36mshape\e[0m: [32, 32, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.55.conv.bias \e[36mshape\e[0m: [32] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.200 \e[36mshape\e[0m: [1, 32, 60, 80] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_13/Pad:0 \e[34mshape\e[0m: (1, 62, 82, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 32, 32) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (32,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_38/Add:0 \e[34mshape\e[0m: (1, 60, 80, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_101\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.200 \e[36mshape\e[0m: [1, 32, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_229 \e[36mshape\e[0m: [1, 32, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_38/Add:0 \e[34mshape\e[0m: (1, 60, 80, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_38/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Concat \e[35monnx_op_name\e[0m: Concat_102\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Concat_229 \e[36mshape\e[0m: [1, 32, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Conv_227 \e[36mshape\e[0m: [1, 32, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: onnx::Conv_225 \e[36mshape\e[0m: [1, 32, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.4\e[0m: onnx::Concat_223 \e[36mshape\e[0m: [1, 32, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.204 \e[36mshape\e[0m: [1, 128, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: concat\r\n\e[32mINFO:\e[0m \e[34minput.1.input0\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_38/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.input1\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_37/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.3.input2\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_36/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.4.input3\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_35/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 32) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.5.axis\e[0m: \e[34mval\e[0m: 3 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.concat_9/concat:0 \e[34mshape\e[0m: (1, 60, 80, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_103\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.204 \e[36mshape\e[0m: [1, 128, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.57.conv.weight \e[36mshape\e[0m: [64, 128, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.57.conv.bias \e[36mshape\e[0m: [64] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.208 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.concat_9/concat:0 \e[34mshape\e[0m: (1, 60, 80, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 128, 64) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (64,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_39/Add:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_104\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.208 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_232 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_39/Add:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_39/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_105\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_232 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.58.conv.weight \e[36mshape\e[0m: [128, 64, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.58.conv.bias \e[36mshape\e[0m: [128] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.212 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_14/Pad:0 \e[34mshape\e[0m: (1, 62, 82, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 64, 128) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (128,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [2, 2] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_40/Add:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_133\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_232 \e[36mshape\e[0m: [1, 64, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.74.conv.weight \e[36mshape\e[0m: [128, 64, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.74.conv.bias \e[36mshape\e[0m: [128] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.276 \e[36mshape\e[0m: [1, 128, 60, 80] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_15/Pad:0 \e[34mshape\e[0m: (1, 62, 82, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 64, 128) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (128,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_41/Add:0 \e[34mshape\e[0m: (1, 60, 80, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_106\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.212 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_234 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_40/Add:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_40/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_134\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.276 \e[36mshape\e[0m: [1, 128, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_262 \e[36mshape\e[0m: [1, 128, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_41/Add:0 \e[34mshape\e[0m: (1, 60, 80, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_41/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Concat \e[35monnx_op_name\e[0m: Concat_107\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Concat_234 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Conv_211 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.216 \e[36mshape\e[0m: [1, 256, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: concat\r\n\e[32mINFO:\e[0m \e[34minput.1.input0\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_40/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.input1\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_33/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.3.axis\e[0m: \e[34mval\e[0m: 3 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.concat_10/concat:0 \e[34mshape\e[0m: (1, 30, 40, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_139\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_262 \e[36mshape\e[0m: [1, 128, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.77.m.0.weight \e[36mshape\e[0m: [18, 128, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.77.m.0.bias \e[36mshape\e[0m: [18] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Reshape_267 \e[36mshape\e[0m: [1, 18, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_41/LeakyRelu:0 \e[34mshape\e[0m: (1, 60, 80, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 128, 18) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (18,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_42/Add:0 \e[34mshape\e[0m: (1, 60, 80, 18) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_108\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.216 \e[36mshape\e[0m: [1, 256, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.60.conv.weight \e[36mshape\e[0m: [64, 256, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.60.conv.bias \e[36mshape\e[0m: [64] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.220 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.concat_10/concat:0 \e[34mshape\e[0m: (1, 30, 40, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 256, 64) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (64,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_43/Add:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_110\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.216 \e[36mshape\e[0m: [1, 256, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.61.conv.weight \e[36mshape\e[0m: [64, 256, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.61.conv.bias \e[36mshape\e[0m: [64] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.224 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.concat_10/concat:0 \e[34mshape\e[0m: (1, 30, 40, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 256, 64) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (64,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_44/Add:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Reshape \e[35monnx_op_name\e[0m: Reshape_140\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Reshape_267 \e[36mshape\e[0m: [1, 18, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Reshape_380 \e[36mshape\e[0m: [5] \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Transpose_279 \e[36mshape\e[0m: [1, 3, 6, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: reshape\r\n\e[32mINFO:\e[0m \e[34minput.1.tensor\e[0m: \e[34mname\e[0m: tf.compat.v1.transpose/transpose:0 \e[34mshape\e[0m: (1, 18, 60, 80) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.shape\e[0m: \e[34mval\e[0m: [1, 3, 6, 60, 80] \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.reshape/Reshape:0 \e[34mshape\e[0m: (1, 3, 6, 60, 80) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_109\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.220 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_237 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_43/Add:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_42/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_111\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.224 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_239 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_44/Add:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_43/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Transpose \e[35monnx_op_name\e[0m: Transpose_141\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Transpose_279 \e[36mshape\e[0m: [1, 3, 6, 60, 80] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Sigmoid_280 \e[36mshape\e[0m: [1, 3, 60, 80, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: transpose_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.a\e[0m: \e[34mname\e[0m: tf.reshape/Reshape:0 \e[34mshape\e[0m: (1, 3, 6, 60, 80) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.perm\e[0m: \e[34mval\e[0m: [0, 1, 3, 4, 2] \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.compat.v1.transpose_1/transpose:0 \e[34mshape\e[0m: (1, 3, 60, 80, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_112\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_239 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.62.conv.weight \e[36mshape\e[0m: [64, 64, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.62.conv.bias \e[36mshape\e[0m: [64] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.228 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_16/Pad:0 \e[34mshape\e[0m: (1, 32, 42, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 64, 64) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (64,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_45/Add:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Sigmoid \e[35monnx_op_name\e[0m: Sigmoid_142\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Sigmoid_280 \e[36mshape\e[0m: [1, 3, 60, 80, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: y \e[36mshape\e[0m: [1, 3, 60, 80, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: sigmoid\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.compat.v1.transpose_1/transpose:0 \e[34mshape\e[0m: (1, 3, 60, 80, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.sigmoid/Sigmoid:0 \e[34mshape\e[0m: (1, 3, 60, 80, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_113\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.228 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_241 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_45/Add:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_44/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Split \e[35monnx_op_name\e[0m: Split_143\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: y \e[36mshape\e[0m: [1, 3, 60, 80, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Mul_282 \e[36mshape\e[0m: [1, 3, 60, 80, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.2\e[0m: wh \e[36mshape\e[0m: [1, 3, 60, 80, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.3\e[0m: onnx::Concat_284 \e[36mshape\e[0m: [1, 3, 60, 80, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: split\r\n\e[32mINFO:\e[0m \e[34minput.1.value\e[0m: \e[34mname\e[0m: tf.math.sigmoid/Sigmoid:0 \e[34mshape\e[0m: (1, 3, 60, 80, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.num_or_size_splits\e[0m: \e[34mval\e[0m: [2, 2, 2] \r\n\e[32mINFO:\e[0m \e[34minput.3.axis\e[0m: \e[34mval\e[0m: 4 \r\n\e[32mINFO:\e[0m \e[34minput.4.num\e[0m: \r\n\e[32mINFO:\e[0m \e[34moutput.1.output0\e[0m: \e[34mname\e[0m: tf.split/split:0 \e[34mshape\e[0m: (1, 3, 60, 80, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34moutput.2.output1\e[0m: \e[34mname\e[0m: tf.split/split:1 \e[34mshape\e[0m: (1, 3, 60, 80, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34moutput.3.output2\e[0m: \e[34mname\e[0m: tf.split/split:2 \e[34mshape\e[0m: (1, 3, 60, 80, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_114\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_241 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.63.conv.weight \e[36mshape\e[0m: [64, 64, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.63.conv.bias \e[36mshape\e[0m: [64] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.232 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_17/Pad:0 \e[34mshape\e[0m: (1, 32, 42, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 64, 64) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (64,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_46/Add:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Mul \e[35monnx_op_name\e[0m: Mul_145\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Mul_282 \e[36mshape\e[0m: [1, 3, 60, 80, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Mul_285 \e[36mshape\e[0m: [] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Add_286 \e[36mshape\e[0m: [1, 3, 60, 80, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: multiply\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.split/split:0 \e[34mshape\e[0m: (1, 3, 60, 80, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.y\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.multiply/Mul:0 \e[34mshape\e[0m: (1, 3, 60, 80, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Pow \e[35monnx_op_name\e[0m: Pow_148\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: wh \e[36mshape\e[0m: [1, 3, 60, 80, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Pow_381 \e[36mshape\e[0m: [] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Mul_291 \e[36mshape\e[0m: [1, 3, 60, 80, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: pow\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.split/split:1 \e[34mshape\e[0m: (1, 3, 60, 80, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.y\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.pow/Pow:0 \e[34mshape\e[0m: (1, 3, 60, 80, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_115\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.232 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_243 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_46/Add:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_45/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Add \e[35monnx_op_name\e[0m: Add_147\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Add_286 \e[36mshape\e[0m: [1, 3, 60, 80, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Add_287 \e[36mshape\e[0m: [1, 1, 60, 80, 2] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_288 \e[36mshape\e[0m: [1, 3, 60, 80, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: add\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.math.multiply/Mul:0 \e[34mshape\e[0m: (1, 3, 60, 80, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.y\e[0m: \e[34mshape\e[0m: (1, 1, 60, 80, 2) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_47/Add:0 \e[34mshape\e[0m: (1, 3, 60, 80, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Mul \e[35monnx_op_name\e[0m: Mul_150\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Mul_291 \e[36mshape\e[0m: [1, 3, 60, 80, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Mul_292 \e[36mshape\e[0m: [1, 3, 1, 1, 2] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_293 \e[36mshape\e[0m: [1, 3, 60, 80, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: multiply\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.math.pow/Pow:0 \e[34mshape\e[0m: (1, 3, 60, 80, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.y\e[0m: \e[34mshape\e[0m: (1, 3, 1, 1, 2) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.multiply_1/Mul:0 \e[34mshape\e[0m: (1, 3, 60, 80, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Concat \e[35monnx_op_name\e[0m: Concat_116\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Concat_243 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Conv_241 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: onnx::Conv_239 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.4\e[0m: onnx::Concat_237 \e[36mshape\e[0m: [1, 64, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.236 \e[36mshape\e[0m: [1, 256, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: concat\r\n\e[32mINFO:\e[0m \e[34minput.1.input0\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_45/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.input1\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_44/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.3.input2\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_43/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.4.input3\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_42/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 64) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.5.axis\e[0m: \e[34mval\e[0m: 3 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.concat_11/concat:0 \e[34mshape\e[0m: (1, 30, 40, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Concat \e[35monnx_op_name\e[0m: Concat_151\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Concat_288 \e[36mshape\e[0m: [1, 3, 60, 80, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Concat_293 \e[36mshape\e[0m: [1, 3, 60, 80, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: onnx::Concat_284 \e[36mshape\e[0m: [1, 3, 60, 80, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Reshape_294 \e[36mshape\e[0m: [1, 3, 60, 80, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: concat\r\n\e[32mINFO:\e[0m \e[34minput.1.input0\e[0m: \e[34mname\e[0m: tf.math.add_47/Add:0 \e[34mshape\e[0m: (1, 3, 60, 80, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.input1\e[0m: \e[34mname\e[0m: tf.math.multiply_1/Mul:0 \e[34mshape\e[0m: (1, 3, 60, 80, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.3.input2\e[0m: \e[34mname\e[0m: tf.split/split:2 \e[34mshape\e[0m: (1, 3, 60, 80, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.4.axis\e[0m: \e[34mval\e[0m: 4 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.concat_12/concat:0 \e[34mshape\e[0m: (1, 3, 60, 80, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_117\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.236 \e[36mshape\e[0m: [1, 256, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.65.conv.weight \e[36mshape\e[0m: [128, 256, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.65.conv.bias \e[36mshape\e[0m: [128] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.240 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.concat_11/concat:0 \e[34mshape\e[0m: (1, 30, 40, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 256, 128) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (128,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_48/Add:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Reshape \e[35monnx_op_name\e[0m: Reshape_152\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Reshape_294 \e[36mshape\e[0m: [1, 3, 60, 80, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Reshape_385 \e[36mshape\e[0m: [3] \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_301 \e[36mshape\e[0m: [1, 14400, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: reshape\r\n\e[32mINFO:\e[0m \e[34minput.1.tensor\e[0m: \e[34mname\e[0m: tf.compat.v1.transpose_2/transpose:0 \e[34mshape\e[0m: (1, 3, 60, 80, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.shape\e[0m: \e[34mval\e[0m: [1, -1, 6] \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.reshape_1/Reshape:0 \e[34mshape\e[0m: (1, 14400, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_118\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.240 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_246 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_48/Add:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_46/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_119\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_246 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.66.conv.weight \e[36mshape\e[0m: [256, 128, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.66.conv.bias \e[36mshape\e[0m: [256] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.244 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_18/Pad:0 \e[34mshape\e[0m: (1, 32, 42, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 128, 256) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (256,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [2, 2] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_49/Add:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_135\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_246 \e[36mshape\e[0m: [1, 128, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.75.conv.weight \e[36mshape\e[0m: [256, 128, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.75.conv.bias \e[36mshape\e[0m: [256] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.280 \e[36mshape\e[0m: [1, 256, 30, 40] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_19/Pad:0 \e[34mshape\e[0m: (1, 32, 42, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 128, 256) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (256,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_50/Add:0 \e[34mshape\e[0m: (1, 30, 40, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_120\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.244 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_248 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_49/Add:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_47/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_136\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.280 \e[36mshape\e[0m: [1, 256, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_264 \e[36mshape\e[0m: [1, 256, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_50/Add:0 \e[34mshape\e[0m: (1, 30, 40, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_48/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Concat \e[35monnx_op_name\e[0m: Concat_121\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Concat_248 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Conv_190 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.248 \e[36mshape\e[0m: [1, 512, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: concat\r\n\e[32mINFO:\e[0m \e[34minput.1.input0\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_47/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.input1\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_27/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.3.axis\e[0m: \e[34mval\e[0m: 3 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.concat_13/concat:0 \e[34mshape\e[0m: (1, 15, 20, 512) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_153\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_264 \e[36mshape\e[0m: [1, 256, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.77.m.1.weight \e[36mshape\e[0m: [18, 256, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.77.m.1.bias \e[36mshape\e[0m: [18] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Reshape_302 \e[36mshape\e[0m: [1, 18, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_48/LeakyRelu:0 \e[34mshape\e[0m: (1, 30, 40, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 256, 18) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (18,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_51/Add:0 \e[34mshape\e[0m: (1, 30, 40, 18) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_122\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.248 \e[36mshape\e[0m: [1, 512, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.68.conv.weight \e[36mshape\e[0m: [128, 512, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.68.conv.bias \e[36mshape\e[0m: [128] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.252 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.concat_13/concat:0 \e[34mshape\e[0m: (1, 15, 20, 512) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 512, 128) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (128,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_52/Add:0 \e[34mshape\e[0m: (1, 15, 20, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_124\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.248 \e[36mshape\e[0m: [1, 512, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.69.conv.weight \e[36mshape\e[0m: [128, 512, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.69.conv.bias \e[36mshape\e[0m: [128] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.256 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.concat_13/concat:0 \e[34mshape\e[0m: (1, 15, 20, 512) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 512, 128) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (128,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_53/Add:0 \e[34mshape\e[0m: (1, 15, 20, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Reshape \e[35monnx_op_name\e[0m: Reshape_154\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Reshape_302 \e[36mshape\e[0m: [1, 18, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Reshape_391 \e[36mshape\e[0m: [5] \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Transpose_314 \e[36mshape\e[0m: [1, 3, 6, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: reshape\r\n\e[32mINFO:\e[0m \e[34minput.1.tensor\e[0m: \e[34mname\e[0m: tf.compat.v1.transpose_3/transpose:0 \e[34mshape\e[0m: (1, 18, 30, 40) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.shape\e[0m: \e[34mval\e[0m: [1, 3, 6, 30, 40] \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.reshape_2/Reshape:0 \e[34mshape\e[0m: (1, 3, 6, 30, 40) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_123\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.252 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_251 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_52/Add:0 \e[34mshape\e[0m: (1, 15, 20, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_49/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_125\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.256 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_253 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_53/Add:0 \e[34mshape\e[0m: (1, 15, 20, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_50/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Transpose \e[35monnx_op_name\e[0m: Transpose_155\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Transpose_314 \e[36mshape\e[0m: [1, 3, 6, 30, 40] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Sigmoid_315 \e[36mshape\e[0m: [1, 3, 30, 40, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: transpose_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.a\e[0m: \e[34mname\e[0m: tf.reshape_2/Reshape:0 \e[34mshape\e[0m: (1, 3, 6, 30, 40) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.perm\e[0m: \e[34mval\e[0m: [0, 1, 3, 4, 2] \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.compat.v1.transpose_4/transpose:0 \e[34mshape\e[0m: (1, 3, 30, 40, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_126\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_253 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.70.conv.weight \e[36mshape\e[0m: [128, 128, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.70.conv.bias \e[36mshape\e[0m: [128] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.260 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_20/Pad:0 \e[34mshape\e[0m: (1, 17, 22, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 128, 128) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (128,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_54/Add:0 \e[34mshape\e[0m: (1, 15, 20, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Sigmoid \e[35monnx_op_name\e[0m: Sigmoid_156\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Sigmoid_315 \e[36mshape\e[0m: [1, 3, 30, 40, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: y.3 \e[36mshape\e[0m: [1, 3, 30, 40, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: sigmoid\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.compat.v1.transpose_4/transpose:0 \e[34mshape\e[0m: (1, 3, 30, 40, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.sigmoid_1/Sigmoid:0 \e[34mshape\e[0m: (1, 3, 30, 40, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_127\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.260 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_255 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_54/Add:0 \e[34mshape\e[0m: (1, 15, 20, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_51/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Split \e[35monnx_op_name\e[0m: Split_157\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: y.3 \e[36mshape\e[0m: [1, 3, 30, 40, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Mul_317 \e[36mshape\e[0m: [1, 3, 30, 40, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.2\e[0m: wh.3 \e[36mshape\e[0m: [1, 3, 30, 40, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.3\e[0m: onnx::Concat_319 \e[36mshape\e[0m: [1, 3, 30, 40, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: split\r\n\e[32mINFO:\e[0m \e[34minput.1.value\e[0m: \e[34mname\e[0m: tf.math.sigmoid_1/Sigmoid:0 \e[34mshape\e[0m: (1, 3, 30, 40, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.num_or_size_splits\e[0m: \e[34mval\e[0m: [2, 2, 2] \r\n\e[32mINFO:\e[0m \e[34minput.3.axis\e[0m: \e[34mval\e[0m: 4 \r\n\e[32mINFO:\e[0m \e[34minput.4.num\e[0m: \r\n\e[32mINFO:\e[0m \e[34moutput.1.output0\e[0m: \e[34mname\e[0m: tf.split_1/split:0 \e[34mshape\e[0m: (1, 3, 30, 40, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34moutput.2.output1\e[0m: \e[34mname\e[0m: tf.split_1/split:1 \e[34mshape\e[0m: (1, 3, 30, 40, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34moutput.3.output2\e[0m: \e[34mname\e[0m: tf.split_1/split:2 \e[34mshape\e[0m: (1, 3, 30, 40, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_128\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_255 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.71.conv.weight \e[36mshape\e[0m: [128, 128, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.71.conv.bias \e[36mshape\e[0m: [128] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.264 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_21/Pad:0 \e[34mshape\e[0m: (1, 17, 22, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 128, 128) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (128,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_55/Add:0 \e[34mshape\e[0m: (1, 15, 20, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Mul \e[35monnx_op_name\e[0m: Mul_159\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Mul_317 \e[36mshape\e[0m: [1, 3, 30, 40, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Mul_320 \e[36mshape\e[0m: [] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Add_321 \e[36mshape\e[0m: [1, 3, 30, 40, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: multiply\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.split_1/split:0 \e[34mshape\e[0m: (1, 3, 30, 40, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.y\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.multiply_2/Mul:0 \e[34mshape\e[0m: (1, 3, 30, 40, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Pow \e[35monnx_op_name\e[0m: Pow_162\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: wh.3 \e[36mshape\e[0m: [1, 3, 30, 40, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Pow_381 \e[36mshape\e[0m: () \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Mul_326 \e[36mshape\e[0m: [1, 3, 30, 40, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: pow\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.split_1/split:1 \e[34mshape\e[0m: (1, 3, 30, 40, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.y\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.pow_1/Pow:0 \e[34mshape\e[0m: (1, 3, 30, 40, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_129\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.264 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_257 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_55/Add:0 \e[34mshape\e[0m: (1, 15, 20, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_52/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Add \e[35monnx_op_name\e[0m: Add_161\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Add_321 \e[36mshape\e[0m: [1, 3, 30, 40, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Add_322 \e[36mshape\e[0m: [1, 1, 30, 40, 2] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_323 \e[36mshape\e[0m: [1, 3, 30, 40, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: add\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.math.multiply_2/Mul:0 \e[34mshape\e[0m: (1, 3, 30, 40, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.y\e[0m: \e[34mshape\e[0m: (1, 1, 30, 40, 2) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_56/Add:0 \e[34mshape\e[0m: (1, 3, 30, 40, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Mul \e[35monnx_op_name\e[0m: Mul_164\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Mul_326 \e[36mshape\e[0m: [1, 3, 30, 40, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Mul_327 \e[36mshape\e[0m: [1, 3, 1, 1, 2] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_328 \e[36mshape\e[0m: [1, 3, 30, 40, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: multiply\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.math.pow_1/Pow:0 \e[34mshape\e[0m: (1, 3, 30, 40, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.y\e[0m: \e[34mshape\e[0m: (1, 3, 1, 1, 2) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.multiply_3/Mul:0 \e[34mshape\e[0m: (1, 3, 30, 40, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Concat \e[35monnx_op_name\e[0m: Concat_130\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Concat_257 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Conv_255 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: onnx::Conv_253 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.4\e[0m: onnx::Concat_251 \e[36mshape\e[0m: [1, 128, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.268 \e[36mshape\e[0m: [1, 512, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: concat\r\n\e[32mINFO:\e[0m \e[34minput.1.input0\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_52/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.input1\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_51/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.3.input2\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_50/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.4.input3\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_49/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 128) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.5.axis\e[0m: \e[34mval\e[0m: 3 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.concat_14/concat:0 \e[34mshape\e[0m: (1, 15, 20, 512) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Concat \e[35monnx_op_name\e[0m: Concat_165\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Concat_323 \e[36mshape\e[0m: [1, 3, 30, 40, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Concat_328 \e[36mshape\e[0m: [1, 3, 30, 40, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: onnx::Concat_319 \e[36mshape\e[0m: [1, 3, 30, 40, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Reshape_329 \e[36mshape\e[0m: [1, 3, 30, 40, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: concat\r\n\e[32mINFO:\e[0m \e[34minput.1.input0\e[0m: \e[34mname\e[0m: tf.math.add_56/Add:0 \e[34mshape\e[0m: (1, 3, 30, 40, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.input1\e[0m: \e[34mname\e[0m: tf.math.multiply_3/Mul:0 \e[34mshape\e[0m: (1, 3, 30, 40, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.3.input2\e[0m: \e[34mname\e[0m: tf.split_1/split:2 \e[34mshape\e[0m: (1, 3, 30, 40, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.4.axis\e[0m: \e[34mval\e[0m: 4 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.concat_15/concat:0 \e[34mshape\e[0m: (1, 3, 30, 40, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_131\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.268 \e[36mshape\e[0m: [1, 512, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.73.conv.weight \e[36mshape\e[0m: [256, 512, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.73.conv.bias \e[36mshape\e[0m: [256] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.272 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.concat_14/concat:0 \e[34mshape\e[0m: (1, 15, 20, 512) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 512, 256) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (256,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_57/Add:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Reshape \e[35monnx_op_name\e[0m: Reshape_166\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Reshape_329 \e[36mshape\e[0m: [1, 3, 30, 40, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Reshape_385 \e[36mshape\e[0m: (3,) \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_336 \e[36mshape\e[0m: [1, 3600, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: reshape\r\n\e[32mINFO:\e[0m \e[34minput.1.tensor\e[0m: \e[34mname\e[0m: tf.compat.v1.transpose_5/transpose:0 \e[34mshape\e[0m: (1, 3, 30, 40, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.shape\e[0m: \e[34mval\e[0m: [1, -1, 6] \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.reshape_3/Reshape:0 \e[34mshape\e[0m: (1, 3600, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_132\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.272 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_260 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_57/Add:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_53/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_137\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_260 \e[36mshape\e[0m: [1, 256, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.76.conv.weight \e[36mshape\e[0m: [512, 256, 3, 3] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.76.conv.bias \e[36mshape\e[0m: [512] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: input.284 \e[36mshape\e[0m: [1, 512, 15, 20] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_22/Pad:0 \e[34mshape\e[0m: (1, 17, 22, 256) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (3, 3, 256, 512) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (512,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_58/Add:0 \e[34mshape\e[0m: (1, 15, 20, 512) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: LeakyRelu \e[35monnx_op_name\e[0m: LeakyRelu_138\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: input.284 \e[36mshape\e[0m: [1, 512, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Conv_266 \e[36mshape\e[0m: [1, 512, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: leaky_relu\r\n\e[32mINFO:\e[0m \e[34minput.1.features\e[0m: \e[34mname\e[0m: tf.math.add_58/Add:0 \e[34mshape\e[0m: (1, 15, 20, 512) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.alpha\e[0m: \e[34mval\e[0m: 0.10000000149011612 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_54/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 512) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Conv \e[35monnx_op_name\e[0m: Conv_167\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Conv_266 \e[36mshape\e[0m: [1, 512, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: model.77.m.2.weight \e[36mshape\e[0m: [18, 512, 1, 1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: model.77.m.2.bias \e[36mshape\e[0m: [18] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Reshape_337 \e[36mshape\e[0m: [1, 18, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: convolution_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.input\e[0m: \e[34mname\e[0m: tf.nn.leaky_relu_54/LeakyRelu:0 \e[34mshape\e[0m: (1, 15, 20, 512) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.weights\e[0m: \e[34mshape\e[0m: (1, 1, 512, 18) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.3.bias\e[0m: \e[34mshape\e[0m: (18,) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.5.dilations\e[0m: \e[34mval\e[0m: [1, 1] \r\n\e[32mINFO:\e[0m \e[34minput.6.padding\e[0m: \e[34mval\e[0m: VALID \r\n\e[32mINFO:\e[0m \e[34minput.7.group\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_59/Add:0 \e[34mshape\e[0m: (1, 15, 20, 18) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Reshape \e[35monnx_op_name\e[0m: Reshape_168\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Reshape_337 \e[36mshape\e[0m: [1, 18, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Reshape_402 \e[36mshape\e[0m: [5] \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Transpose_349 \e[36mshape\e[0m: [1, 3, 6, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: reshape\r\n\e[32mINFO:\e[0m \e[34minput.1.tensor\e[0m: \e[34mname\e[0m: tf.compat.v1.transpose_6/transpose:0 \e[34mshape\e[0m: (1, 18, 15, 20) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.shape\e[0m: \e[34mval\e[0m: [1, 3, 6, 15, 20] \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.reshape_4/Reshape:0 \e[34mshape\e[0m: (1, 3, 6, 15, 20) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Transpose \e[35monnx_op_name\e[0m: Transpose_169\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Transpose_349 \e[36mshape\e[0m: [1, 3, 6, 15, 20] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Sigmoid_350 \e[36mshape\e[0m: [1, 3, 15, 20, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: transpose_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.a\e[0m: \e[34mname\e[0m: tf.reshape_4/Reshape:0 \e[34mshape\e[0m: (1, 3, 6, 15, 20) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.perm\e[0m: \e[34mval\e[0m: [0, 1, 3, 4, 2] \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.compat.v1.transpose_7/transpose:0 \e[34mshape\e[0m: (1, 3, 15, 20, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Sigmoid \e[35monnx_op_name\e[0m: Sigmoid_170\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Sigmoid_350 \e[36mshape\e[0m: [1, 3, 15, 20, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: y.7 \e[36mshape\e[0m: [1, 3, 15, 20, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: sigmoid\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.compat.v1.transpose_7/transpose:0 \e[34mshape\e[0m: (1, 3, 15, 20, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.sigmoid_2/Sigmoid:0 \e[34mshape\e[0m: (1, 3, 15, 20, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Split \e[35monnx_op_name\e[0m: Split_171\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: y.7 \e[36mshape\e[0m: [1, 3, 15, 20, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Mul_352 \e[36mshape\e[0m: [1, 3, 15, 20, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.2\e[0m: wh.7 \e[36mshape\e[0m: [1, 3, 15, 20, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.3\e[0m: onnx::Concat_354 \e[36mshape\e[0m: [1, 3, 15, 20, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: split\r\n\e[32mINFO:\e[0m \e[34minput.1.value\e[0m: \e[34mname\e[0m: tf.math.sigmoid_2/Sigmoid:0 \e[34mshape\e[0m: (1, 3, 15, 20, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.num_or_size_splits\e[0m: \e[34mval\e[0m: [2, 2, 2] \r\n\e[32mINFO:\e[0m \e[34minput.3.axis\e[0m: \e[34mval\e[0m: 4 \r\n\e[32mINFO:\e[0m \e[34minput.4.num\e[0m: \r\n\e[32mINFO:\e[0m \e[34moutput.1.output0\e[0m: \e[34mname\e[0m: tf.split_2/split:0 \e[34mshape\e[0m: (1, 3, 15, 20, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34moutput.2.output1\e[0m: \e[34mname\e[0m: tf.split_2/split:1 \e[34mshape\e[0m: (1, 3, 15, 20, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34moutput.3.output2\e[0m: \e[34mname\e[0m: tf.split_2/split:2 \e[34mshape\e[0m: (1, 3, 15, 20, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Mul \e[35monnx_op_name\e[0m: Mul_173\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Mul_352 \e[36mshape\e[0m: [1, 3, 15, 20, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Mul_355 \e[36mshape\e[0m: [] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Add_356 \e[36mshape\e[0m: [1, 3, 15, 20, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: multiply\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.split_2/split:0 \e[34mshape\e[0m: (1, 3, 15, 20, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.y\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.multiply_4/Mul:0 \e[34mshape\e[0m: (1, 3, 15, 20, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Pow \e[35monnx_op_name\e[0m: Pow_176\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: wh.7 \e[36mshape\e[0m: [1, 3, 15, 20, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Pow_381 \e[36mshape\e[0m: () \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Mul_361 \e[36mshape\e[0m: [1, 3, 15, 20, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: pow\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.split_2/split:1 \e[34mshape\e[0m: (1, 3, 15, 20, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.y\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.pow_2/Pow:0 \e[34mshape\e[0m: (1, 3, 15, 20, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Add \e[35monnx_op_name\e[0m: Add_175\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Add_356 \e[36mshape\e[0m: [1, 3, 15, 20, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Add_357 \e[36mshape\e[0m: [1, 1, 15, 20, 2] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_358 \e[36mshape\e[0m: [1, 3, 15, 20, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: add\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.math.multiply_4/Mul:0 \e[34mshape\e[0m: (1, 3, 15, 20, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.y\e[0m: \e[34mshape\e[0m: (1, 1, 15, 20, 2) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_60/Add:0 \e[34mshape\e[0m: (1, 3, 15, 20, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Mul \e[35monnx_op_name\e[0m: Mul_178\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Mul_361 \e[36mshape\e[0m: [1, 3, 15, 20, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Mul_362 \e[36mshape\e[0m: [1, 3, 1, 1, 2] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_363 \e[36mshape\e[0m: [1, 3, 15, 20, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: multiply\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.math.pow_2/Pow:0 \e[34mshape\e[0m: (1, 3, 15, 20, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.y\e[0m: \e[34mshape\e[0m: (1, 3, 1, 1, 2) \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.multiply_5/Mul:0 \e[34mshape\e[0m: (1, 3, 15, 20, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Concat \e[35monnx_op_name\e[0m: Concat_179\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Concat_358 \e[36mshape\e[0m: [1, 3, 15, 20, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Concat_363 \e[36mshape\e[0m: [1, 3, 15, 20, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: onnx::Concat_354 \e[36mshape\e[0m: [1, 3, 15, 20, 2] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Reshape_364 \e[36mshape\e[0m: [1, 3, 15, 20, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: concat\r\n\e[32mINFO:\e[0m \e[34minput.1.input0\e[0m: \e[34mname\e[0m: tf.math.add_60/Add:0 \e[34mshape\e[0m: (1, 3, 15, 20, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.input1\e[0m: \e[34mname\e[0m: tf.math.multiply_5/Mul:0 \e[34mshape\e[0m: (1, 3, 15, 20, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.3.input2\e[0m: \e[34mname\e[0m: tf.split_2/split:2 \e[34mshape\e[0m: (1, 3, 15, 20, 2) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.4.axis\e[0m: \e[34mval\e[0m: 4 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.concat_16/concat:0 \e[34mshape\e[0m: (1, 3, 15, 20, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Reshape \e[35monnx_op_name\e[0m: Reshape_180\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Reshape_364 \e[36mshape\e[0m: [1, 3, 15, 20, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Reshape_385 \e[36mshape\e[0m: (3,) \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: onnx::Concat_371 \e[36mshape\e[0m: [1, 900, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: reshape\r\n\e[32mINFO:\e[0m \e[34minput.1.tensor\e[0m: \e[34mname\e[0m: tf.compat.v1.transpose_8/transpose:0 \e[34mshape\e[0m: (1, 3, 15, 20, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.shape\e[0m: \e[34mval\e[0m: [1, -1, 6] \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.reshape_5/Reshape:0 \e[34mshape\e[0m: (1, 900, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Concat \e[35monnx_op_name\e[0m: Concat_181\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: onnx::Concat_301 \e[36mshape\e[0m: [1, 14400, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Concat_336 \e[36mshape\e[0m: [1, 3600, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: onnx::Concat_371 \e[36mshape\e[0m: [1, 900, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: output \e[36mshape\e[0m: [1, 18900, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: concat\r\n\e[32mINFO:\e[0m \e[34minput.1.input0\e[0m: \e[34mname\e[0m: tf.reshape_1/Reshape:0 \e[34mshape\e[0m: (1, 14400, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.input1\e[0m: \e[34mname\e[0m: tf.reshape_3/Reshape:0 \e[34mshape\e[0m: (1, 3600, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.3.input2\e[0m: \e[34mname\e[0m: tf.reshape_5/Reshape:0 \e[34mshape\e[0m: (1, 900, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.4.axis\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.concat_17/concat:0 \e[34mshape\e[0m: (1, 18900, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Slice \e[35monnx_op_name\e[0m: main01_Slice_4\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: output \e[36mshape\e[0m: [1, 18900, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_onnx::Slice_2 \e[36mshape\e[0m: [1] \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: main01_onnx::Slice_3 \e[36mshape\e[0m: [1] \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36minput_name.4\e[0m: main01_onnx::Slice_1 \e[36mshape\e[0m: [1] \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36minput_name.5\e[0m: main01_onnx::Slice_4 \e[36mshape\e[0m: [1] \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_boxes_cxcywh \e[36mshape\e[0m: [1, 18900, 4] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: strided_slice\r\n\e[32mINFO:\e[0m \e[34minput.1.input_\e[0m: \e[34mname\e[0m: tf.concat_17/concat:0 \e[34mshape\e[0m: (1, 18900, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.begin\e[0m: \e[34mval\e[0m: [0, 0, 0] \r\n\e[32mINFO:\e[0m \e[34minput.3.end\e[0m: \e[34mval\e[0m: [1, 18900, 4] \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mshape\e[0m: (1,) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.strided_slice/StridedSlice:0 \e[34mshape\e[0m: (1, 18900, 4) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Slice \e[35monnx_op_name\e[0m: main01_Slice_9\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: output \e[36mshape\e[0m: [1, 18900, 6] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_onnx::Slice_3 \e[36mshape\e[0m: (1,) \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: main01_onnx::Slice_8 \e[36mshape\e[0m: [1] \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36minput_name.4\e[0m: main01_onnx::Slice_1 \e[36mshape\e[0m: (1,) \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36minput_name.5\e[0m: main01_onnx::Slice_4 \e[36mshape\e[0m: (1,) \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_onnx::Transpose_10 \e[36mshape\e[0m: [1, 18900, 1] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: strided_slice\r\n\e[32mINFO:\e[0m \e[34minput.1.input_\e[0m: \e[34mname\e[0m: tf.concat_17/concat:0 \e[34mshape\e[0m: (1, 18900, 6) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.begin\e[0m: \e[34mval\e[0m: [0, 0, 4] \r\n\e[32mINFO:\e[0m \e[34minput.3.end\e[0m: \e[34mval\e[0m: [1, 18900, 5] \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \e[34mshape\e[0m: (1,) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.strided_slice_1/StridedSlice:0 \e[34mshape\e[0m: (1, 18900, 1) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Transpose \e[35monnx_op_name\e[0m: main01_Transpose_10\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_onnx::Transpose_10 \e[36mshape\e[0m: [1, 18900, 1] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_scores \e[36mshape\e[0m: [1, 1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: transpose_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.a\e[0m: \e[34mname\e[0m: tf.strided_slice_1/StridedSlice:0 \e[34mshape\e[0m: (1, 18900, 1) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.perm\e[0m: \e[34mval\e[0m: [0, 2, 1] \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.compat.v1.transpose_9/transpose:0 \e[34mshape\e[0m: (1, 1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Gather \e[35monnx_op_name\e[0m: main01_Gather_1\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_boxes_cxcywh \e[36mshape\e[0m: [1, 18900, 4] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_onnx::Gather_1 \e[36mshape\e[0m: [] \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_onnx::Sub_2 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: gather_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.params\e[0m: \e[34mname\e[0m: tf.strided_slice/StridedSlice:0 \e[34mshape\e[0m: (1, 18900, 4) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.indices\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: int64 \r\n\e[32mINFO:\e[0m \e[34minput.3.axis\e[0m: \e[34mval\e[0m: 2 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.compat.v1.gather/GatherV2:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Gather \e[35monnx_op_name\e[0m: main01_Gather_3\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_boxes_cxcywh \e[36mshape\e[0m: [1, 18900, 4] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_onnx::Gather_3 \e[36mshape\e[0m: [] \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_onnx::Div_4 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: gather_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.params\e[0m: \e[34mname\e[0m: tf.strided_slice/StridedSlice:0 \e[34mshape\e[0m: (1, 18900, 4) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.indices\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: int64 \r\n\e[32mINFO:\e[0m \e[34minput.3.axis\e[0m: \e[34mval\e[0m: 2 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_1/GatherV2:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Gather \e[35monnx_op_name\e[0m: main01_Gather_9\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_boxes_cxcywh \e[36mshape\e[0m: [1, 18900, 4] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_onnx::Gather_9 \e[36mshape\e[0m: [] \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_onnx::Sub_10 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: gather_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.params\e[0m: \e[34mname\e[0m: tf.strided_slice/StridedSlice:0 \e[34mshape\e[0m: (1, 18900, 4) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.indices\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: int64 \r\n\e[32mINFO:\e[0m \e[34minput.3.axis\e[0m: \e[34mval\e[0m: 2 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_2/GatherV2:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Gather \e[35monnx_op_name\e[0m: main01_Gather_11\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_boxes_cxcywh \e[36mshape\e[0m: [1, 18900, 4] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_onnx::Gather_11 \e[36mshape\e[0m: [] \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_onnx::Div_12 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: gather_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.params\e[0m: \e[34mname\e[0m: tf.strided_slice/StridedSlice:0 \e[34mshape\e[0m: (1, 18900, 4) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.indices\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: int64 \r\n\e[32mINFO:\e[0m \e[34minput.3.axis\e[0m: \e[34mval\e[0m: 2 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_3/GatherV2:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Gather \e[35monnx_op_name\e[0m: main01_Gather_17\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_boxes_cxcywh \e[36mshape\e[0m: [1, 18900, 4] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_onnx::Gather_1 \e[36mshape\e[0m: () \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_onnx::Add_18 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: gather_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.params\e[0m: \e[34mname\e[0m: tf.strided_slice/StridedSlice:0 \e[34mshape\e[0m: (1, 18900, 4) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.indices\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: int64 \r\n\e[32mINFO:\e[0m \e[34minput.3.axis\e[0m: \e[34mval\e[0m: 2 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_4/GatherV2:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Gather \e[35monnx_op_name\e[0m: main01_Gather_19\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_boxes_cxcywh \e[36mshape\e[0m: [1, 18900, 4] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_onnx::Gather_3 \e[36mshape\e[0m: () \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_onnx::Div_20 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: gather_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.params\e[0m: \e[34mname\e[0m: tf.strided_slice/StridedSlice:0 \e[34mshape\e[0m: (1, 18900, 4) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.indices\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: int64 \r\n\e[32mINFO:\e[0m \e[34minput.3.axis\e[0m: \e[34mval\e[0m: 2 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_5/GatherV2:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Gather \e[35monnx_op_name\e[0m: main01_Gather_25\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_boxes_cxcywh \e[36mshape\e[0m: [1, 18900, 4] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_onnx::Gather_9 \e[36mshape\e[0m: () \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_onnx::Add_26 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: gather_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.params\e[0m: \e[34mname\e[0m: tf.strided_slice/StridedSlice:0 \e[34mshape\e[0m: (1, 18900, 4) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.indices\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: int64 \r\n\e[32mINFO:\e[0m \e[34minput.3.axis\e[0m: \e[34mval\e[0m: 2 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_6/GatherV2:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Gather \e[35monnx_op_name\e[0m: main01_Gather_27\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_boxes_cxcywh \e[36mshape\e[0m: [1, 18900, 4] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_onnx::Gather_11 \e[36mshape\e[0m: () \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_onnx::Div_28 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: gather_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.params\e[0m: \e[34mname\e[0m: tf.strided_slice/StridedSlice:0 \e[34mshape\e[0m: (1, 18900, 4) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.indices\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: int64 \r\n\e[32mINFO:\e[0m \e[34minput.3.axis\e[0m: \e[34mval\e[0m: 2 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_7/GatherV2:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Div \e[35monnx_op_name\e[0m: main01_Div_5\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_onnx::Div_4 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Pow_381 \e[36mshape\e[0m: () \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_onnx::Sub_6 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: divide\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_1/GatherV2:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.y\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.divide/truediv:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Div \e[35monnx_op_name\e[0m: main01_Div_13\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_onnx::Div_12 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Pow_381 \e[36mshape\e[0m: () \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_onnx::Sub_14 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: divide\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_3/GatherV2:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.y\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.divide_1/truediv:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Div \e[35monnx_op_name\e[0m: main01_Div_21\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_onnx::Div_20 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Pow_381 \e[36mshape\e[0m: () \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_onnx::Add_22 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: divide\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_5/GatherV2:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.y\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.divide_2/truediv:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Div \e[35monnx_op_name\e[0m: main01_Div_29\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_onnx::Div_28 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: onnx::Pow_381 \e[36mshape\e[0m: () \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_onnx::Add_30 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: divide\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_7/GatherV2:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.y\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: float32 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.divide_3/truediv:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Sub \e[35monnx_op_name\e[0m: main01_Sub_6\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_onnx::Sub_2 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_onnx::Sub_6 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_onnx::Unsqueeze_7 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: subtract\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.compat.v1.gather/GatherV2:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.y\e[0m: \e[34mname\e[0m: tf.math.divide/truediv:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.subtract/Sub:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Sub \e[35monnx_op_name\e[0m: main01_Sub_14\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_onnx::Sub_10 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_onnx::Sub_14 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_onnx::Unsqueeze_15 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: subtract\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_2/GatherV2:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.y\e[0m: \e[34mname\e[0m: tf.math.divide_1/truediv:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.subtract_1/Sub:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Add \e[35monnx_op_name\e[0m: main01_Add_22\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_onnx::Add_18 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_onnx::Add_22 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_onnx::Unsqueeze_23 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: add\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_4/GatherV2:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.y\e[0m: \e[34mname\e[0m: tf.math.divide_2/truediv:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_61/Add:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Add \e[35monnx_op_name\e[0m: main01_Add_30\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_onnx::Add_26 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_onnx::Add_30 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_onnx::Unsqueeze_31 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: add\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_6/GatherV2:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.y\e[0m: \e[34mname\e[0m: tf.math.divide_3/truediv:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.add_62/Add:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Unsqueeze \e[35monnx_op_name\e[0m: main01_Unsqueeze_7\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_onnx::Unsqueeze_7 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_onnx::Concat_8 \e[36mshape\e[0m: [1, 18900, 1] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: reshape\r\n\e[32mINFO:\e[0m \e[34minput.1.tensor\e[0m: \e[34mname\e[0m: tf.math.subtract/Sub:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.shape\e[0m: \e[34mval\e[0m: [1, 18900, 1] \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.reshape_6/Reshape:0 \e[34mshape\e[0m: (1, 18900, 1) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Unsqueeze \e[35monnx_op_name\e[0m: main01_Unsqueeze_15\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_onnx::Unsqueeze_15 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_onnx::Concat_16 \e[36mshape\e[0m: [1, 18900, 1] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: reshape\r\n\e[32mINFO:\e[0m \e[34minput.1.tensor\e[0m: \e[34mname\e[0m: tf.math.subtract_1/Sub:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.shape\e[0m: \e[34mval\e[0m: [1, 18900, 1] \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.reshape_7/Reshape:0 \e[34mshape\e[0m: (1, 18900, 1) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Unsqueeze \e[35monnx_op_name\e[0m: main01_Unsqueeze_23\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_onnx::Unsqueeze_23 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_onnx::Concat_24 \e[36mshape\e[0m: [1, 18900, 1] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: reshape\r\n\e[32mINFO:\e[0m \e[34minput.1.tensor\e[0m: \e[34mname\e[0m: tf.math.add_61/Add:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.shape\e[0m: \e[34mval\e[0m: [1, 18900, 1] \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.reshape_8/Reshape:0 \e[34mshape\e[0m: (1, 18900, 1) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Unsqueeze \e[35monnx_op_name\e[0m: main01_Unsqueeze_31\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_onnx::Unsqueeze_31 \e[36mshape\e[0m: [1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_onnx::Concat_32 \e[36mshape\e[0m: [1, 18900, 1] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: reshape\r\n\e[32mINFO:\e[0m \e[34minput.1.tensor\e[0m: \e[34mname\e[0m: tf.math.add_62/Add:0 \e[34mshape\e[0m: (1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.shape\e[0m: \e[34mval\e[0m: [1, 18900, 1] \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.reshape_9/Reshape:0 \e[34mshape\e[0m: (1, 18900, 1) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Concat \e[35monnx_op_name\e[0m: main01_Concat_32\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_onnx::Concat_16 \e[36mshape\e[0m: [1, 18900, 1] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_onnx::Concat_8 \e[36mshape\e[0m: [1, 18900, 1] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: main01_onnx::Concat_32 \e[36mshape\e[0m: [1, 18900, 1] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.4\e[0m: main01_onnx::Concat_24 \e[36mshape\e[0m: [1, 18900, 1] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_y1x1y2x2 \e[36mshape\e[0m: [1, 18900, 4] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: concat\r\n\e[32mINFO:\e[0m \e[34minput.1.input0\e[0m: \e[34mname\e[0m: tf.reshape_7/Reshape:0 \e[34mshape\e[0m: (1, 18900, 1) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.input1\e[0m: \e[34mname\e[0m: tf.reshape_6/Reshape:0 \e[34mshape\e[0m: (1, 18900, 1) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.3.input2\e[0m: \e[34mname\e[0m: tf.reshape_9/Reshape:0 \e[34mshape\e[0m: (1, 18900, 1) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.4.input3\e[0m: \e[34mname\e[0m: tf.reshape_8/Reshape:0 \e[34mshape\e[0m: (1, 18900, 1) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.5.axis\e[0m: \e[34mval\e[0m: 2 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.concat_18/concat:0 \e[34mshape\e[0m: (1, 18900, 4) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: NonMaxSuppression \e[35monnx_op_name\e[0m: main01_nonmaxsuppression11\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_y1x1y2x2 \e[36mshape\e[0m: [1, 18900, 4] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_scores \e[36mshape\e[0m: [1, 1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: main01_max_output_boxes_per_class \e[36mshape\e[0m: [1] \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36minput_name.4\e[0m: main01_iou_threshold \e[36mshape\e[0m: [1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36minput_name.5\e[0m: main01_score_threshold \e[36mshape\e[0m: [1] \e[36mdtype\e[0m: <class 'numpy.float32'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_selected_indices \e[36mshape\e[0m: ['N', 3] \e[36mdtype\e[0m: int64\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: non_max_suppression\r\n\e[32mINFO:\e[0m \e[34minput.1.boxes\e[0m: \e[34mname\e[0m: tf.compat.v1.squeeze/Squeeze:0 \e[34mshape\e[0m: (18900, 4) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.scores\e[0m: \e[34mname\e[0m: tf.compat.v1.squeeze_2/Squeeze:0 \e[34mshape\e[0m: (18900,) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.3.max_output_boxes_per_class\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: <dtype: 'int32'> \r\n\e[32mINFO:\e[0m \e[34minput.4.iou_threshold\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.5.score_threshold\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_24/PadV2:0 \e[34mshape\e[0m: (None, 3) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Mul \e[35monnx_op_name\e[0m: main01_mul11\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_selected_indices \e[36mshape\e[0m: ['N', 3] \e[36mdtype\e[0m: int64\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_onnx::Slice_4 \e[36mshape\e[0m: (1,) \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_workaround_mul_out \e[36mshape\e[0m: ['N', 3] \e[36mdtype\e[0m: int64\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: multiply\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.compat.v1.pad_24/PadV2:0 \e[34mshape\e[0m: (None, 3) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n\e[32mINFO:\e[0m \e[34minput.2.y\e[0m: \e[34mshape\e[0m: (1,) \e[34mdtype\e[0m: int64 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.math.multiply_6/Mul:0 \e[34mshape\e[0m: (None, 3) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: GatherND \e[35monnx_op_name\e[0m: main01_model/tf.compat.v1.gather_nd/GatherNd\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_scores \e[36mshape\e[0m: [1, 1, 18900] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_workaround_mul_out \e[36mshape\e[0m: ['N', 3] \e[36mdtype\e[0m: int64\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_model/tf.compat.v1.gather_nd/GatherNd \e[36mshape\e[0m: ['unk__10'] \e[36mdtype\e[0m: float32\r\n"
  - delay: 200
    content: "\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: gather_nd_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.params\e[0m: \e[34mname\e[0m: tf.compat.v1.transpose_9/transpose:0 \e[34mshape\e[0m: (1, 1, 18900) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.indices\e[0m: \e[34mname\e[0m: tf.math.floormod/FloorMod:0 \e[34mshape\e[0m: (None, 3) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n\e[32mINFO:\e[0m \e[34minput.3.batch_dims\e[0m: \e[34mval\e[0m: 0 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_nd/GatherNd:0 \e[34mshape\e[0m: (None,) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Gather \e[35monnx_op_name\e[0m: sub01_Gather_1\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_workaround_mul_out \e[36mshape\e[0m: ['N', 3] \e[36mdtype\e[0m: int64\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_onnx::Gather_1 \e[36mshape\e[0m: () \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: sub01_onnx::Unsqueeze_2 \e[36mshape\e[0m: ['N'] \e[36mdtype\e[0m: int64\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: gather_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.params\e[0m: \e[34mname\e[0m: tf.math.multiply_6/Mul:0 \e[34mshape\e[0m: (None, 3) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n\e[32mINFO:\e[0m \e[34minput.2.indices\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: int64 \r\n\e[32mINFO:\e[0m \e[34minput.3.axis\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_11/GatherV2:0 \e[34mshape\e[0m: (None,) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Gather \e[35monnx_op_name\e[0m: sub01_Gather_4\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_workaround_mul_out \e[36mshape\e[0m: ['N', 3] \e[36mdtype\e[0m: int64\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_onnx::Gather_9 \e[36mshape\e[0m: () \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: sub01_onnx::Unsqueeze_5 \e[36mshape\e[0m: ['N'] \e[36mdtype\e[0m: int64\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: gather_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.params\e[0m: \e[34mname\e[0m: tf.math.multiply_6/Mul:0 \e[34mshape\e[0m: (None, 3) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n\e[32mINFO:\e[0m \e[34minput.2.indices\e[0m: \e[34mshape\e[0m: () \e[34mdtype\e[0m: int64 \r\n\e[32mINFO:\e[0m \e[34minput.3.axis\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_12/GatherV2:0 \e[34mshape\e[0m: (None,) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Gather \e[35monnx_op_name\e[0m: sub01_Gather_7\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_workaround_mul_out \e[36mshape\e[0m: ['N', 3] \e[36mdtype\e[0m: int64\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: sub01_onnx::Gather_7 \e[36mshape\e[0m: [2] \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: sub01_final_box_nums \e[36mshape\e[0m: ['N', 2] \e[36mdtype\e[0m: int64\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: gather_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.params\e[0m: \e[34mname\e[0m: tf.math.multiply_6/Mul:0 \e[34mshape\e[0m: (None, 3) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n\e[32mINFO:\e[0m \e[34minput.2.indices\e[0m: \e[34mshape\e[0m: (2,) \e[34mdtype\e[0m: int64 \r\n\e[32mINFO:\e[0m \e[34minput.3.axis\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_13/GatherV2:0 \e[34mshape\e[0m: (None, 2) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Reshape \e[35monnx_op_name\e[0m: main01_model/tf.__operators__.getitem/strided_slice1\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_model/tf.compat.v1.gather_nd/GatherNd \e[36mshape\e[0m: ['unk__10'] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_const_fold_opt__9 \e[36mshape\e[0m: [2] \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: main01_model/tf.__operators__.getitem/strided_slice1 \e[36mshape\e[0m: ['unk__0', 1] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: reshape\r\n\e[32mINFO:\e[0m \e[34minput.1.tensor\e[0m: \e[34mname\e[0m: tf.compat.v1.transpose_11/transpose:0 \e[34mshape\e[0m: (None,) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.shape\e[0m: \e[34mval\e[0m: [-1, 1] \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.reshape_10/Reshape:0 \e[34mshape\e[0m: (None, 1) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Unsqueeze \e[35monnx_op_name\e[0m: sub01_Unsqueeze_2\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: sub01_onnx::Unsqueeze_2 \e[36mshape\e[0m: ['N'] \e[36mdtype\e[0m: int64\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: final_batch_nums \e[36mshape\e[0m: ['N', 1] \e[36mdtype\e[0m: int64\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: reshape\r\n\e[32mINFO:\e[0m \e[34minput.1.tensor\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_11/GatherV2:0 \e[34mshape\e[0m: (None,) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n\e[32mINFO:\e[0m \e[34minput.2.shape\e[0m: \e[34mval\e[0m: [-1, 1] \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.reshape_11/Reshape:0 \e[34mshape\e[0m: (None, 1) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Unsqueeze \e[35monnx_op_name\e[0m: sub01_Unsqueeze_5\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: sub01_onnx::Unsqueeze_5 \e[36mshape\e[0m: ['N'] \e[36mdtype\e[0m: int64\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: final_class_nums \e[36mshape\e[0m: ['N', 1] \e[36mdtype\e[0m: int64\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: reshape\r\n\e[32mINFO:\e[0m \e[34minput.1.tensor\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_12/GatherV2:0 \e[34mshape\e[0m: (None,) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n\e[32mINFO:\e[0m \e[34minput.2.shape\e[0m: \e[34mval\e[0m: [-1, 1] \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.reshape_12/Reshape:0 \e[34mshape\e[0m: (None, 1) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: GatherND \e[35monnx_op_name\e[0m: model/tf.compat.v1.gather_nd/GatherNd\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_y1x1y2x2 \e[36mshape\e[0m: [1, 18900, 4] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: sub01_final_box_nums \e[36mshape\e[0m: ['N', 2] \e[36mdtype\e[0m: int64\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: model/tf.compat.v1.gather_nd/GatherNd \e[36mshape\e[0m: ['unk__5', 4] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: gather_nd_v2\r\n\e[32mINFO:\e[0m \e[34minput.1.params\e[0m: \e[34mname\e[0m: tf.concat_18/concat:0 \e[34mshape\e[0m: (1, 18900, 4) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.indices\e[0m: \e[34mname\e[0m: tf.math.floormod_1/FloorMod:0 \e[34mshape\e[0m: (None, 2) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n\e[32mINFO:\e[0m \e[34minput.3.batch_dims\e[0m: \e[34mval\e[0m: 0 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_nd_1/GatherNd:0 \e[34mshape\e[0m: (None, 4) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Slice \e[35monnx_op_name\e[0m: main01_PartitionedCall\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: main01_model/tf.__operators__.getitem/strided_slice1 \e[36mshape\e[0m: ['unk__0', 1] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: main01_const_starts__6 \e[36mshape\e[0m: [2] \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: main01_const_ends__7 \e[36mshape\e[0m: [2] \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36minput_name.4\e[0m: main01_const_axes__8 \e[36mshape\e[0m: [2] \e[36mdtype\e[0m: <class 'numpy.int64'>\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: score \e[36mshape\e[0m: ['N', 1] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: strided_slice\r\n\e[32mINFO:\e[0m \e[34minput.1.input_\e[0m: \e[34mname\e[0m: tf.reshape_10/Reshape:0 \e[34mshape\e[0m: (None, 1) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.begin\e[0m: \e[34mshape\e[0m: (2,) \e[34mdtype\e[0m: int64 \r\n\e[32mINFO:\e[0m \e[34minput.3.end\e[0m: \e[34mshape\e[0m: (2,) \e[34mdtype\e[0m: int64 \r\n\e[32mINFO:\e[0m \e[34minput.4.strides\e[0m: \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.strided_slice_2/StridedSlice:0 \e[34mshape\e[0m: (None, 1) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Cast \e[35monnx_op_name\e[0m: PartitionedCall\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: model/tf.compat.v1.gather_nd/GatherNd \e[36mshape\e[0m: ['unk__5', 4] \e[36mdtype\e[0m: float32\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: final_boxes \e[36mshape\e[0m: ['N', 4] \e[36mdtype\e[0m: int64\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: cast\r\n\e[32mINFO:\e[0m \e[34minput.1.x\e[0m: \e[34mname\e[0m: tf.compat.v1.gather_nd_1/GatherNd:0 \e[34mshape\e[0m: (None, 4) \e[34mdtype\e[0m: <dtype: 'float32'> \r\n\e[32mINFO:\e[0m \e[34minput.2.dtype\e[0m: \e[34mname\e[0m: int64 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.cast_1/Cast:0 \e[34mshape\e[0m: (None, 4) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n\r\n\e[32mINFO:\e[0m \e[35monnx_op_type\e[0m: Concat \e[35monnx_op_name\e[0m: Concat_0\r\n\e[32mINFO:\e[0m \e[36minput_name.1\e[0m: final_batch_nums \e[36mshape\e[0m: ['N', 1] \e[36mdtype\e[0m: int64\r\n\e[32mINFO:\e[0m \e[36minput_name.2\e[0m: final_class_nums \e[36mshape\e[0m: ['N', 1] \e[36mdtype\e[0m: int64\r\n\e[32mINFO:\e[0m \e[36minput_name.3\e[0m: final_boxes \e[36mshape\e[0m: ['N', 4] \e[36mdtype\e[0m: int64\r\n\e[32mINFO:\e[0m \e[36moutput_name.1\e[0m: batchno_classid_x1y1x2y2 \e[36mshape\e[0m: ['N', 6] \e[36mdtype\e[0m: int64\r\n\e[32mINFO:\e[0m \e[35mtf_op_type\e[0m: concat\r\n\e[32mINFO:\e[0m \e[34minput.1.input0\e[0m: \e[34mname\e[0m: tf.reshape_11/Reshape:0 \e[34mshape\e[0m: (None, 1) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n\e[32mINFO:\e[0m \e[34minput.2.input1\e[0m: \e[34mname\e[0m: tf.reshape_12/Reshape:0 \e[34mshape\e[0m: (None, 1) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n\e[32mINFO:\e[0m \e[34minput.3.input2\e[0m: \e[34mname\e[0m: tf.cast_1/Cast:0 \e[34mshape\e[0m: (None, 4) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n\e[32mINFO:\e[0m \e[34minput.4.axis\e[0m: \e[34mval\e[0m: 1 \r\n\e[32mINFO:\e[0m \e[34moutput.1.output\e[0m: \e[34mname\e[0m: tf.concat_19/concat:0 \e[34mshape\e[0m: (None, 6) \e[34mdtype\e[0m: <dtype: 'int64'> \r\n"
  - delay: 1000
    content: "\r\nModel: \"model\"\r\n____________________________________________________________________________________________________________________________________________\r\n Layer (type)                                 Output Shape                   Param #         Connected to                                   \r\n============================================================================================================================================\r\n input (InputLayer)                           [(1, 480, 640, 3)]             0               []                                             \r\n                                                                                                                                            \r\n tf.compat.v1.pad (TFOpLambda)                (1, 482, 642, 3)               0               ['input[0][0]']                                \r\n                                                                                                                                            \r\n tf.nn.convolution (TFOpLambda)               (1, 240, 320, 32)              0               ['tf.compat.v1.pad[0][0]']                     \r\n                                                                                                                                            \r\n tf.math.add (TFOpLambda)                     (1, 240, 320, 32)              0               ['tf.nn.convolution[0][0]']                    \r\n                                                                                                                                            \r\n tf.nn.leaky_relu (TFOpLambda)                (1, 240, 320, 32)              0               ['tf.math.add[0][0]']                          \r\n                                                                                                                                            \r\n tf.compat.v1.pad_1 (TFOpLambda)              (1, 242, 322, 32)              0               ['tf.nn.leaky_relu[0][0]']                     \r\n                                                                                                                                            \r\n tf.nn.convolution_1 (TFOpLambda)             (1, 120, 160, 64)              0               ['tf.compat.v1.pad_1[0][0]']                   \r\n                                                                                                                                            \r\n tf.math.add_1 (TFOpLambda)                   (1, 120, 160, 64)              0               ['tf.nn.convolution_1[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_1 (TFOpLambda)              (1, 120, 160, 64)              0               ['tf.math.add_1[0][0]']                        \r\n                                                                                                                                            \r\n tf.nn.convolution_3 (TFOpLambda)             (1, 120, 160, 32)              0               ['tf.nn.leaky_relu_1[0][0]']                   \r\n                                                                                                                                            \r\n tf.math.add_3 (TFOpLambda)                   (1, 120, 160, 32)              0               ['tf.nn.convolution_3[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_3 (TFOpLambda)              (1, 120, 160, 32)              0               ['tf.math.add_3[0][0]']                        \r\n                                                                                                                                            \r\n tf.compat.v1.pad_2 (TFOpLambda)              (1, 122, 162, 32)              0               ['tf.nn.leaky_relu_3[0][0]']                   \r\n                                                                                                                                            \r\n tf.nn.convolution_4 (TFOpLambda)             (1, 120, 160, 32)              0               ['tf.compat.v1.pad_2[0][0]']                   \r\n                                                                                                                                            \r\n tf.math.add_4 (TFOpLambda)                   (1, 120, 160, 32)              0               ['tf.nn.convolution_4[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_4 (TFOpLambda)              (1, 120, 160, 32)              0               ['tf.math.add_4[0][0]']                        \r\n                                                                                                                                            \r\n tf.compat.v1.pad_3 (TFOpLambda)              (1, 122, 162, 32)              0               ['tf.nn.leaky_relu_4[0][0]']                   \r\n                                                                                                                                            \r\n tf.nn.convolution_5 (TFOpLambda)             (1, 120, 160, 32)              0               ['tf.compat.v1.pad_3[0][0]']                   \r\n                                                                                                                                            \r\n tf.nn.convolution_2 (TFOpLambda)             (1, 120, 160, 32)              0               ['tf.nn.leaky_relu_1[0][0]']                   \r\n                                                                                                                                            \r\n tf.math.add_5 (TFOpLambda)                   (1, 120, 160, 32)              0               ['tf.nn.convolution_5[0][0]']                  \r\n                                                                                                                                            \r\n tf.math.add_2 (TFOpLambda)                   (1, 120, 160, 32)              0               ['tf.nn.convolution_2[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_5 (TFOpLambda)              (1, 120, 160, 32)              0               ['tf.math.add_5[0][0]']                        \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_2 (TFOpLambda)              (1, 120, 160, 32)              0               ['tf.math.add_2[0][0]']                        \r\n                                                                                                                                            \r\n tf.concat (TFOpLambda)                       (1, 120, 160, 128)             0               ['tf.nn.leaky_relu_5[0][0]',                   \r\n                                                                                              'tf.nn.leaky_relu_4[0][0]',                   \r\n                                                                                              'tf.nn.leaky_relu_3[0][0]',                   \r\n                                                                                              'tf.nn.leaky_relu_2[0][0]']                   \r\n                                                                                                                                            \r\n tf.nn.convolution_6 (TFOpLambda)             (1, 120, 160, 64)              0               ['tf.concat[0][0]']                            \r\n                                                                                                                                            \r\n tf.math.add_6 (TFOpLambda)                   (1, 120, 160, 64)              0               ['tf.nn.convolution_6[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_6 (TFOpLambda)              (1, 120, 160, 64)              0               ['tf.math.add_6[0][0]']                        \r\n                                                                                                                                            \r\n tf.nn.max_pool2d (TFOpLambda)                (1, 60, 80, 64)                0               ['tf.nn.leaky_relu_6[0][0]']                   \r\n                                                                                                                                            \r\n tf.nn.convolution_8 (TFOpLambda)             (1, 60, 80, 64)                0               ['tf.nn.max_pool2d[0][0]']                     \r\n                                                                                                                                            \r\n tf.math.add_8 (TFOpLambda)                   (1, 60, 80, 64)                0               ['tf.nn.convolution_8[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_8 (TFOpLambda)              (1, 60, 80, 64)                0               ['tf.math.add_8[0][0]']                        \r\n                                                                                                                                            \r\n tf.compat.v1.pad_4 (TFOpLambda)              (1, 62, 82, 64)                0               ['tf.nn.leaky_relu_8[0][0]']                   \r\n                                                                                                                                            \r\n tf.nn.convolution_9 (TFOpLambda)             (1, 60, 80, 64)                0               ['tf.compat.v1.pad_4[0][0]']                   \r\n                                                                                                                                            \r\n tf.math.add_9 (TFOpLambda)                   (1, 60, 80, 64)                0               ['tf.nn.convolution_9[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_9 (TFOpLambda)              (1, 60, 80, 64)                0               ['tf.math.add_9[0][0]']                        \r\n                                                                                                                                            \r\n tf.compat.v1.pad_5 (TFOpLambda)              (1, 62, 82, 64)                0               ['tf.nn.leaky_relu_9[0][0]']                   \r\n                                                                                                                                            \r\n tf.nn.convolution_10 (TFOpLambda)            (1, 60, 80, 64)                0               ['tf.compat.v1.pad_5[0][0]']                   \r\n                                                                                                                                            \r\n tf.nn.convolution_7 (TFOpLambda)             (1, 60, 80, 64)                0               ['tf.nn.max_pool2d[0][0]']                     \r\n                                                                                                                                            \r\n tf.math.add_10 (TFOpLambda)                  (1, 60, 80, 64)                0               ['tf.nn.convolution_10[0][0]']                 \r\n                                                                                                                                            \r\n tf.math.add_7 (TFOpLambda)                   (1, 60, 80, 64)                0               ['tf.nn.convolution_7[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_10 (TFOpLambda)             (1, 60, 80, 64)                0               ['tf.math.add_10[0][0]']                       \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_7 (TFOpLambda)              (1, 60, 80, 64)                0               ['tf.math.add_7[0][0]']                        \r\n                                                                                                                                            \r\n tf.concat_1 (TFOpLambda)                     (1, 60, 80, 256)               0               ['tf.nn.leaky_relu_10[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_9[0][0]',                   \r\n                                                                                              'tf.nn.leaky_relu_8[0][0]',                   \r\n                                                                                              'tf.nn.leaky_relu_7[0][0]']                   \r\n                                                                                                                                            \r\n tf.nn.convolution_11 (TFOpLambda)            (1, 60, 80, 128)               0               ['tf.concat_1[0][0]']                          \r\n                                                                                                                                            \r\n tf.math.add_11 (TFOpLambda)                  (1, 60, 80, 128)               0               ['tf.nn.convolution_11[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_11 (TFOpLambda)             (1, 60, 80, 128)               0               ['tf.math.add_11[0][0]']                       \r\n                                                                                                                                            \r\n tf.nn.max_pool2d_1 (TFOpLambda)              (1, 30, 40, 128)               0               ['tf.nn.leaky_relu_11[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_14 (TFOpLambda)            (1, 30, 40, 128)               0               ['tf.nn.max_pool2d_1[0][0]']                   \r\n                                                                                                                                            \r\n tf.math.add_14 (TFOpLambda)                  (1, 30, 40, 128)               0               ['tf.nn.convolution_14[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_14 (TFOpLambda)             (1, 30, 40, 128)               0               ['tf.math.add_14[0][0]']                       \r\n                                                                                                                                            \r\n tf.compat.v1.pad_6 (TFOpLambda)              (1, 32, 42, 128)               0               ['tf.nn.leaky_relu_14[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_15 (TFOpLambda)            (1, 30, 40, 128)               0               ['tf.compat.v1.pad_6[0][0]']                   \r\n                                                                                                                                            \r\n tf.math.add_15 (TFOpLambda)                  (1, 30, 40, 128)               0               ['tf.nn.convolution_15[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_15 (TFOpLambda)             (1, 30, 40, 128)               0               ['tf.math.add_15[0][0]']                       \r\n                                                                                                                                            \r\n tf.compat.v1.pad_7 (TFOpLambda)              (1, 32, 42, 128)               0               ['tf.nn.leaky_relu_15[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_16 (TFOpLambda)            (1, 30, 40, 128)               0               ['tf.compat.v1.pad_7[0][0]']                   \r\n                                                                                                                                            \r\n tf.nn.convolution_13 (TFOpLambda)            (1, 30, 40, 128)               0               ['tf.nn.max_pool2d_1[0][0]']                   \r\n                                                                                                                                            \r\n tf.math.add_16 (TFOpLambda)                  (1, 30, 40, 128)               0               ['tf.nn.convolution_16[0][0]']                 \r\n                                                                                                                                            \r\n tf.math.add_13 (TFOpLambda)                  (1, 30, 40, 128)               0               ['tf.nn.convolution_13[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_16 (TFOpLambda)             (1, 30, 40, 128)               0               ['tf.math.add_16[0][0]']                       \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_13 (TFOpLambda)             (1, 30, 40, 128)               0               ['tf.math.add_13[0][0]']                       \r\n                                                                                                                                            \r\n tf.concat_2 (TFOpLambda)                     (1, 30, 40, 512)               0               ['tf.nn.leaky_relu_16[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_15[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_14[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_13[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_17 (TFOpLambda)            (1, 30, 40, 256)               0               ['tf.concat_2[0][0]']                          \r\n                                                                                                                                            \r\n tf.math.add_17 (TFOpLambda)                  (1, 30, 40, 256)               0               ['tf.nn.convolution_17[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_17 (TFOpLambda)             (1, 30, 40, 256)               0               ['tf.math.add_17[0][0]']                       \r\n                                                                                                                                            \r\n tf.nn.max_pool2d_2 (TFOpLambda)              (1, 15, 20, 256)               0               ['tf.nn.leaky_relu_17[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_20 (TFOpLambda)            (1, 15, 20, 256)               0               ['tf.nn.max_pool2d_2[0][0]']                   \r\n                                                                                                                                            \r\n tf.math.add_20 (TFOpLambda)                  (1, 15, 20, 256)               0               ['tf.nn.convolution_20[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_20 (TFOpLambda)             (1, 15, 20, 256)               0               ['tf.math.add_20[0][0]']                       \r\n                                                                                                                                            \r\n tf.compat.v1.pad_8 (TFOpLambda)              (1, 17, 22, 256)               0               ['tf.nn.leaky_relu_20[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_21 (TFOpLambda)            (1, 15, 20, 256)               0               ['tf.compat.v1.pad_8[0][0]']                   \r\n                                                                                                                                            \r\n tf.math.add_21 (TFOpLambda)                  (1, 15, 20, 256)               0               ['tf.nn.convolution_21[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_21 (TFOpLambda)             (1, 15, 20, 256)               0               ['tf.math.add_21[0][0]']                       \r\n                                                                                                                                            \r\n tf.compat.v1.pad_9 (TFOpLambda)              (1, 17, 22, 256)               0               ['tf.nn.leaky_relu_21[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_22 (TFOpLambda)            (1, 15, 20, 256)               0               ['tf.compat.v1.pad_9[0][0]']                   \r\n                                                                                                                                            \r\n tf.nn.convolution_19 (TFOpLambda)            (1, 15, 20, 256)               0               ['tf.nn.max_pool2d_2[0][0]']                   \r\n                                                                                                                                            \r\n tf.math.add_22 (TFOpLambda)                  (1, 15, 20, 256)               0               ['tf.nn.convolution_22[0][0]']                 \r\n                                                                                                                                            \r\n tf.math.add_19 (TFOpLambda)                  (1, 15, 20, 256)               0               ['tf.nn.convolution_19[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_22 (TFOpLambda)             (1, 15, 20, 256)               0               ['tf.math.add_22[0][0]']                       \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_19 (TFOpLambda)             (1, 15, 20, 256)               0               ['tf.math.add_19[0][0]']                       \r\n                                                                                                                                            \r\n tf.concat_3 (TFOpLambda)                     (1, 15, 20, 1024)              0               ['tf.nn.leaky_relu_22[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_21[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_20[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_19[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_23 (TFOpLambda)            (1, 15, 20, 512)               0               ['tf.concat_3[0][0]']                          \r\n                                                                                                                                            \r\n tf.math.add_23 (TFOpLambda)                  (1, 15, 20, 512)               0               ['tf.nn.convolution_23[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_23 (TFOpLambda)             (1, 15, 20, 512)               0               ['tf.math.add_23[0][0]']                       \r\n                                                                                                                                            \r\n tf.nn.convolution_25 (TFOpLambda)            (1, 15, 20, 256)               0               ['tf.nn.leaky_relu_23[0][0]']                  \r\n                                                                                                                                            \r\n tf.math.add_25 (TFOpLambda)                  (1, 15, 20, 256)               0               ['tf.nn.convolution_25[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_25 (TFOpLambda)             (1, 15, 20, 256)               0               ['tf.math.add_25[0][0]']                       \r\n                                                                                                                                            \r\n tf.compat.v1.nn.pool_2 (TFOpLambda)          (1, 15, 20, 256)               0               ['tf.nn.leaky_relu_25[0][0]']                  \r\n                                                                                                                                            \r\n tf.compat.v1.nn.pool_1 (TFOpLambda)          (1, 15, 20, 256)               0               ['tf.nn.leaky_relu_25[0][0]']                  \r\n                                                                                                                                            \r\n tf.compat.v1.nn.pool (TFOpLambda)            (1, 15, 20, 256)               0               ['tf.nn.leaky_relu_25[0][0]']                  \r\n                                                                                                                                            \r\n tf.concat_4 (TFOpLambda)                     (1, 15, 20, 1024)              0               ['tf.compat.v1.nn.pool_2[0][0]',               \r\n                                                                                              'tf.compat.v1.nn.pool_1[0][0]',               \r\n                                                                                              'tf.compat.v1.nn.pool[0][0]',                 \r\n                                                                                              'tf.nn.leaky_relu_25[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_26 (TFOpLambda)            (1, 15, 20, 256)               0               ['tf.concat_4[0][0]']                          \r\n                                                                                                                                            \r\n tf.nn.convolution_24 (TFOpLambda)            (1, 15, 20, 256)               0               ['tf.nn.leaky_relu_23[0][0]']                  \r\n                                                                                                                                            \r\n tf.math.add_26 (TFOpLambda)                  (1, 15, 20, 256)               0               ['tf.nn.convolution_26[0][0]']                 \r\n                                                                                                                                            \r\n tf.math.add_24 (TFOpLambda)                  (1, 15, 20, 256)               0               ['tf.nn.convolution_24[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_26 (TFOpLambda)             (1, 15, 20, 256)               0               ['tf.math.add_26[0][0]']                       \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_24 (TFOpLambda)             (1, 15, 20, 256)               0               ['tf.math.add_24[0][0]']                       \r\n                                                                                                                                            \r\n tf.concat_5 (TFOpLambda)                     (1, 15, 20, 512)               0               ['tf.nn.leaky_relu_26[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_24[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_27 (TFOpLambda)            (1, 15, 20, 256)               0               ['tf.concat_5[0][0]']                          \r\n                                                                                                                                            \r\n tf.math.add_27 (TFOpLambda)                  (1, 15, 20, 256)               0               ['tf.nn.convolution_27[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_27 (TFOpLambda)             (1, 15, 20, 256)               0               ['tf.math.add_27[0][0]']                       \r\n                                                                                                                                            \r\n tf.nn.convolution_28 (TFOpLambda)            (1, 15, 20, 128)               0               ['tf.nn.leaky_relu_27[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_18 (TFOpLambda)            (1, 30, 40, 128)               0               ['tf.nn.leaky_relu_17[0][0]']                  \r\n                                                                                                                                            \r\n tf.math.add_28 (TFOpLambda)                  (1, 15, 20, 128)               0               ['tf.nn.convolution_28[0][0]']                 \r\n                                                                                                                                            \r\n tf.math.add_18 (TFOpLambda)                  (1, 30, 40, 128)               0               ['tf.nn.convolution_18[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_28 (TFOpLambda)             (1, 15, 20, 128)               0               ['tf.math.add_28[0][0]']                       \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_18 (TFOpLambda)             (1, 30, 40, 128)               0               ['tf.math.add_18[0][0]']                       \r\n                                                                                                                                            \r\n lambda (Lambda)                              (1, 30, 40, 128)               0               ['tf.nn.leaky_relu_28[0][0]']                  \r\n                                                                                                                                            \r\n tf.concat_6 (TFOpLambda)                     (1, 30, 40, 256)               0               ['tf.nn.leaky_relu_18[0][0]',                  \r\n                                                                                              'lambda[0][0]']                               \r\n                                                                                                                                            \r\n tf.nn.convolution_30 (TFOpLambda)            (1, 30, 40, 64)                0               ['tf.concat_6[0][0]']                          \r\n                                                                                                                                            \r\n tf.math.add_30 (TFOpLambda)                  (1, 30, 40, 64)                0               ['tf.nn.convolution_30[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_30 (TFOpLambda)             (1, 30, 40, 64)                0               ['tf.math.add_30[0][0]']                       \r\n                                                                                                                                            \r\n tf.compat.v1.pad_10 (TFOpLambda)             (1, 32, 42, 64)                0               ['tf.nn.leaky_relu_30[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_31 (TFOpLambda)            (1, 30, 40, 64)                0               ['tf.compat.v1.pad_10[0][0]']                  \r\n                                                                                                                                            \r\n tf.math.add_31 (TFOpLambda)                  (1, 30, 40, 64)                0               ['tf.nn.convolution_31[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_31 (TFOpLambda)             (1, 30, 40, 64)                0               ['tf.math.add_31[0][0]']                       \r\n                                                                                                                                            \r\n tf.compat.v1.pad_11 (TFOpLambda)             (1, 32, 42, 64)                0               ['tf.nn.leaky_relu_31[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_32 (TFOpLambda)            (1, 30, 40, 64)                0               ['tf.compat.v1.pad_11[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_29 (TFOpLambda)            (1, 30, 40, 64)                0               ['tf.concat_6[0][0]']                          \r\n                                                                                                                                            \r\n tf.math.add_32 (TFOpLambda)                  (1, 30, 40, 64)                0               ['tf.nn.convolution_32[0][0]']                 \r\n                                                                                                                                            \r\n tf.math.add_29 (TFOpLambda)                  (1, 30, 40, 64)                0               ['tf.nn.convolution_29[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_32 (TFOpLambda)             (1, 30, 40, 64)                0               ['tf.math.add_32[0][0]']                       \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_29 (TFOpLambda)             (1, 30, 40, 64)                0               ['tf.math.add_29[0][0]']                       \r\n                                                                                                                                            \r\n tf.concat_7 (TFOpLambda)                     (1, 30, 40, 256)               0               ['tf.nn.leaky_relu_32[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_31[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_30[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_29[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_33 (TFOpLambda)            (1, 30, 40, 128)               0               ['tf.concat_7[0][0]']                          \r\n                                                                                                                                            \r\n tf.math.add_33 (TFOpLambda)                  (1, 30, 40, 128)               0               ['tf.nn.convolution_33[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_33 (TFOpLambda)             (1, 30, 40, 128)               0               ['tf.math.add_33[0][0]']                       \r\n                                                                                                                                            \r\n tf.nn.convolution_34 (TFOpLambda)            (1, 30, 40, 64)                0               ['tf.nn.leaky_relu_33[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_12 (TFOpLambda)            (1, 60, 80, 64)                0               ['tf.nn.leaky_relu_11[0][0]']                  \r\n                                                                                                                                            \r\n tf.math.add_34 (TFOpLambda)                  (1, 30, 40, 64)                0               ['tf.nn.convolution_34[0][0]']                 \r\n                                                                                                                                            \r\n tf.math.add_12 (TFOpLambda)                  (1, 60, 80, 64)                0               ['tf.nn.convolution_12[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_34 (TFOpLambda)             (1, 30, 40, 64)                0               ['tf.math.add_34[0][0]']                       \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_12 (TFOpLambda)             (1, 60, 80, 64)                0               ['tf.math.add_12[0][0]']                       \r\n                                                                                                                                            \r\n lambda_1 (Lambda)                            (1, 60, 80, 64)                0               ['tf.nn.leaky_relu_34[0][0]']                  \r\n                                                                                                                                            \r\n tf.concat_8 (TFOpLambda)                     (1, 60, 80, 128)               0               ['tf.nn.leaky_relu_12[0][0]',                  \r\n                                                                                              'lambda_1[0][0]']                             \r\n                                                                                                                                            \r\n tf.nn.convolution_36 (TFOpLambda)            (1, 60, 80, 32)                0               ['tf.concat_8[0][0]']                          \r\n                                                                                                                                            \r\n tf.math.add_36 (TFOpLambda)                  (1, 60, 80, 32)                0               ['tf.nn.convolution_36[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_36 (TFOpLambda)             (1, 60, 80, 32)                0               ['tf.math.add_36[0][0]']                       \r\n                                                                                                                                            \r\n tf.compat.v1.pad_12 (TFOpLambda)             (1, 62, 82, 32)                0               ['tf.nn.leaky_relu_36[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_37 (TFOpLambda)            (1, 60, 80, 32)                0               ['tf.compat.v1.pad_12[0][0]']                  \r\n                                                                                                                                            \r\n tf.math.add_37 (TFOpLambda)                  (1, 60, 80, 32)                0               ['tf.nn.convolution_37[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_37 (TFOpLambda)             (1, 60, 80, 32)                0               ['tf.math.add_37[0][0]']                       \r\n                                                                                                                                            \r\n tf.compat.v1.pad_13 (TFOpLambda)             (1, 62, 82, 32)                0               ['tf.nn.leaky_relu_37[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_38 (TFOpLambda)            (1, 60, 80, 32)                0               ['tf.compat.v1.pad_13[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_35 (TFOpLambda)            (1, 60, 80, 32)                0               ['tf.concat_8[0][0]']                          \r\n                                                                                                                                            \r\n tf.math.add_38 (TFOpLambda)                  (1, 60, 80, 32)                0               ['tf.nn.convolution_38[0][0]']                 \r\n                                                                                                                                            \r\n tf.math.add_35 (TFOpLambda)                  (1, 60, 80, 32)                0               ['tf.nn.convolution_35[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_38 (TFOpLambda)             (1, 60, 80, 32)                0               ['tf.math.add_38[0][0]']                       \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_35 (TFOpLambda)             (1, 60, 80, 32)                0               ['tf.math.add_35[0][0]']                       \r\n                                                                                                                                            \r\n tf.concat_9 (TFOpLambda)                     (1, 60, 80, 128)               0               ['tf.nn.leaky_relu_38[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_37[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_36[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_35[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_39 (TFOpLambda)            (1, 60, 80, 64)                0               ['tf.concat_9[0][0]']                          \r\n                                                                                                                                            \r\n tf.math.add_39 (TFOpLambda)                  (1, 60, 80, 64)                0               ['tf.nn.convolution_39[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_39 (TFOpLambda)             (1, 60, 80, 64)                0               ['tf.math.add_39[0][0]']                       \r\n                                                                                                                                            \r\n tf.compat.v1.pad_14 (TFOpLambda)             (1, 62, 82, 64)                0               ['tf.nn.leaky_relu_39[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_40 (TFOpLambda)            (1, 30, 40, 128)               0               ['tf.compat.v1.pad_14[0][0]']                  \r\n                                                                                                                                            \r\n tf.math.add_40 (TFOpLambda)                  (1, 30, 40, 128)               0               ['tf.nn.convolution_40[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_40 (TFOpLambda)             (1, 30, 40, 128)               0               ['tf.math.add_40[0][0]']                       \r\n                                                                                                                                            \r\n tf.concat_10 (TFOpLambda)                    (1, 30, 40, 256)               0               ['tf.nn.leaky_relu_40[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_33[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_44 (TFOpLambda)            (1, 30, 40, 64)                0               ['tf.concat_10[0][0]']                         \r\n                                                                                                                                            \r\n tf.math.add_44 (TFOpLambda)                  (1, 30, 40, 64)                0               ['tf.nn.convolution_44[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_43 (TFOpLambda)             (1, 30, 40, 64)                0               ['tf.math.add_44[0][0]']                       \r\n                                                                                                                                            \r\n tf.compat.v1.pad_16 (TFOpLambda)             (1, 32, 42, 64)                0               ['tf.nn.leaky_relu_43[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_45 (TFOpLambda)            (1, 30, 40, 64)                0               ['tf.compat.v1.pad_16[0][0]']                  \r\n                                                                                                                                            \r\n tf.math.add_45 (TFOpLambda)                  (1, 30, 40, 64)                0               ['tf.nn.convolution_45[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_44 (TFOpLambda)             (1, 30, 40, 64)                0               ['tf.math.add_45[0][0]']                       \r\n                                                                                                                                            \r\n tf.compat.v1.pad_17 (TFOpLambda)             (1, 32, 42, 64)                0               ['tf.nn.leaky_relu_44[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_46 (TFOpLambda)            (1, 30, 40, 64)                0               ['tf.compat.v1.pad_17[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_43 (TFOpLambda)            (1, 30, 40, 64)                0               ['tf.concat_10[0][0]']                         \r\n                                                                                                                                            \r\n tf.math.add_46 (TFOpLambda)                  (1, 30, 40, 64)                0               ['tf.nn.convolution_46[0][0]']                 \r\n                                                                                                                                            \r\n tf.math.add_43 (TFOpLambda)                  (1, 30, 40, 64)                0               ['tf.nn.convolution_43[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_45 (TFOpLambda)             (1, 30, 40, 64)                0               ['tf.math.add_46[0][0]']                       \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_42 (TFOpLambda)             (1, 30, 40, 64)                0               ['tf.math.add_43[0][0]']                       \r\n                                                                                                                                            \r\n tf.concat_11 (TFOpLambda)                    (1, 30, 40, 256)               0               ['tf.nn.leaky_relu_45[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_44[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_43[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_42[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_47 (TFOpLambda)            (1, 30, 40, 128)               0               ['tf.concat_11[0][0]']                         \r\n                                                                                                                                            \r\n tf.math.add_48 (TFOpLambda)                  (1, 30, 40, 128)               0               ['tf.nn.convolution_47[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_46 (TFOpLambda)             (1, 30, 40, 128)               0               ['tf.math.add_48[0][0]']                       \r\n                                                                                                                                            \r\n tf.compat.v1.pad_18 (TFOpLambda)             (1, 32, 42, 128)               0               ['tf.nn.leaky_relu_46[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_48 (TFOpLambda)            (1, 15, 20, 256)               0               ['tf.compat.v1.pad_18[0][0]']                  \r\n                                                                                                                                            \r\n tf.math.add_49 (TFOpLambda)                  (1, 15, 20, 256)               0               ['tf.nn.convolution_48[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_47 (TFOpLambda)             (1, 15, 20, 256)               0               ['tf.math.add_49[0][0]']                       \r\n                                                                                                                                            \r\n tf.concat_13 (TFOpLambda)                    (1, 15, 20, 512)               0               ['tf.nn.leaky_relu_47[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_27[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_52 (TFOpLambda)            (1, 15, 20, 128)               0               ['tf.concat_13[0][0]']                         \r\n                                                                                                                                            \r\n tf.math.add_53 (TFOpLambda)                  (1, 15, 20, 128)               0               ['tf.nn.convolution_52[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_50 (TFOpLambda)             (1, 15, 20, 128)               0               ['tf.math.add_53[0][0]']                       \r\n                                                                                                                                            \r\n tf.compat.v1.pad_20 (TFOpLambda)             (1, 17, 22, 128)               0               ['tf.nn.leaky_relu_50[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_53 (TFOpLambda)            (1, 15, 20, 128)               0               ['tf.compat.v1.pad_20[0][0]']                  \r\n                                                                                                                                            \r\n tf.math.add_54 (TFOpLambda)                  (1, 15, 20, 128)               0               ['tf.nn.convolution_53[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_51 (TFOpLambda)             (1, 15, 20, 128)               0               ['tf.math.add_54[0][0]']                       \r\n                                                                                                                                            \r\n tf.compat.v1.pad_21 (TFOpLambda)             (1, 17, 22, 128)               0               ['tf.nn.leaky_relu_51[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_54 (TFOpLambda)            (1, 15, 20, 128)               0               ['tf.compat.v1.pad_21[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_51 (TFOpLambda)            (1, 15, 20, 128)               0               ['tf.concat_13[0][0]']                         \r\n                                                                                                                                            \r\n tf.math.add_55 (TFOpLambda)                  (1, 15, 20, 128)               0               ['tf.nn.convolution_54[0][0]']                 \r\n                                                                                                                                            \r\n tf.math.add_52 (TFOpLambda)                  (1, 15, 20, 128)               0               ['tf.nn.convolution_51[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_52 (TFOpLambda)             (1, 15, 20, 128)               0               ['tf.math.add_55[0][0]']                       \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_49 (TFOpLambda)             (1, 15, 20, 128)               0               ['tf.math.add_52[0][0]']                       \r\n                                                                                                                                            \r\n tf.concat_14 (TFOpLambda)                    (1, 15, 20, 512)               0               ['tf.nn.leaky_relu_52[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_51[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_50[0][0]',                  \r\n                                                                                              'tf.nn.leaky_relu_49[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_55 (TFOpLambda)            (1, 15, 20, 256)               0               ['tf.concat_14[0][0]']                         \r\n                                                                                                                                            \r\n tf.math.add_57 (TFOpLambda)                  (1, 15, 20, 256)               0               ['tf.nn.convolution_55[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_53 (TFOpLambda)             (1, 15, 20, 256)               0               ['tf.math.add_57[0][0]']                       \r\n                                                                                                                                            \r\n tf.compat.v1.pad_15 (TFOpLambda)             (1, 62, 82, 64)                0               ['tf.nn.leaky_relu_39[0][0]']                  \r\n                                                                                                                                            \r\n tf.compat.v1.pad_19 (TFOpLambda)             (1, 32, 42, 128)               0               ['tf.nn.leaky_relu_46[0][0]']                  \r\n                                                                                                                                            \r\n tf.compat.v1.pad_22 (TFOpLambda)             (1, 17, 22, 256)               0               ['tf.nn.leaky_relu_53[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_41 (TFOpLambda)            (1, 60, 80, 128)               0               ['tf.compat.v1.pad_15[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_49 (TFOpLambda)            (1, 30, 40, 256)               0               ['tf.compat.v1.pad_19[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_56 (TFOpLambda)            (1, 15, 20, 512)               0               ['tf.compat.v1.pad_22[0][0]']                  \r\n                                                                                                                                            \r\n tf.math.add_41 (TFOpLambda)                  (1, 60, 80, 128)               0               ['tf.nn.convolution_41[0][0]']                 \r\n                                                                                                                                            \r\n tf.math.add_50 (TFOpLambda)                  (1, 30, 40, 256)               0               ['tf.nn.convolution_49[0][0]']                 \r\n                                                                                                                                            \r\n tf.math.add_58 (TFOpLambda)                  (1, 15, 20, 512)               0               ['tf.nn.convolution_56[0][0]']                 \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_41 (TFOpLambda)             (1, 60, 80, 128)               0               ['tf.math.add_41[0][0]']                       \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_48 (TFOpLambda)             (1, 30, 40, 256)               0               ['tf.math.add_50[0][0]']                       \r\n                                                                                                                                            \r\n tf.nn.leaky_relu_54 (TFOpLambda)             (1, 15, 20, 512)               0               ['tf.math.add_58[0][0]']                       \r\n                                                                                                                                            \r\n tf.nn.convolution_42 (TFOpLambda)            (1, 60, 80, 18)                0               ['tf.nn.leaky_relu_41[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_50 (TFOpLambda)            (1, 30, 40, 18)                0               ['tf.nn.leaky_relu_48[0][0]']                  \r\n                                                                                                                                            \r\n tf.nn.convolution_57 (TFOpLambda)            (1, 15, 20, 18)                0               ['tf.nn.leaky_relu_54[0][0]']                  \r\n                                                                                                                                            \r\n tf.math.add_42 (TFOpLambda)                  (1, 60, 80, 18)                0               ['tf.nn.convolution_42[0][0]']                 \r\n                                                                                                                                            \r\n tf.math.add_51 (TFOpLambda)                  (1, 30, 40, 18)                0               ['tf.nn.convolution_50[0][0]']                 \r\n                                                                                                                                            \r\n tf.math.add_59 (TFOpLambda)                  (1, 15, 20, 18)                0               ['tf.nn.convolution_57[0][0]']                 \r\n                                                                                                                                            \r\n tf.compat.v1.transpose (TFOpLambda)          (1, 18, 60, 80)                0               ['tf.math.add_42[0][0]']                       \r\n                                                                                                                                            \r\n tf.compat.v1.transpose_3 (TFOpLambda)        (1, 18, 30, 40)                0               ['tf.math.add_51[0][0]']                       \r\n                                                                                                                                            \r\n tf.compat.v1.transpose_6 (TFOpLambda)        (1, 18, 15, 20)                0               ['tf.math.add_59[0][0]']                       \r\n                                                                                                                                            \r\n tf.reshape (TFOpLambda)                      (1, 3, 6, 60, 80)              0               ['tf.compat.v1.transpose[0][0]']               \r\n                                                                                                                                            \r\n tf.reshape_2 (TFOpLambda)                    (1, 3, 6, 30, 40)              0               ['tf.compat.v1.transpose_3[0][0]']             \r\n                                                                                                                                            \r\n tf.reshape_4 (TFOpLambda)                    (1, 3, 6, 15, 20)              0               ['tf.compat.v1.transpose_6[0][0]']             \r\n                                                                                                                                            \r\n tf.compat.v1.transpose_1 (TFOpLambda)        (1, 3, 60, 80, 6)              0               ['tf.reshape[0][0]']                           \r\n                                                                                                                                            \r\n tf.compat.v1.transpose_4 (TFOpLambda)        (1, 3, 30, 40, 6)              0               ['tf.reshape_2[0][0]']                         \r\n                                                                                                                                            \r\n tf.compat.v1.transpose_7 (TFOpLambda)        (1, 3, 15, 20, 6)              0               ['tf.reshape_4[0][0]']                         \r\n                                                                                                                                            \r\n tf.math.sigmoid (TFOpLambda)                 (1, 3, 60, 80, 6)              0               ['tf.compat.v1.transpose_1[0][0]']             \r\n                                                                                                                                            \r\n tf.math.sigmoid_1 (TFOpLambda)               (1, 3, 30, 40, 6)              0               ['tf.compat.v1.transpose_4[0][0]']             \r\n                                                                                                                                            \r\n tf.math.sigmoid_2 (TFOpLambda)               (1, 3, 15, 20, 6)              0               ['tf.compat.v1.transpose_7[0][0]']             \r\n                                                                                                                                            \r\n tf.split (TFOpLambda)                        [(1, 3, 60, 80, 2),            0               ['tf.math.sigmoid[0][0]']                      \r\n                                               (1, 3, 60, 80, 2),                                                                           \r\n                                               (1, 3, 60, 80, 2)]                                                                           \r\n                                                                                                                                            \r\n tf.split_1 (TFOpLambda)                      [(1, 3, 30, 40, 2),            0               ['tf.math.sigmoid_1[0][0]']                    \r\n                                               (1, 3, 30, 40, 2),                                                                           \r\n                                               (1, 3, 30, 40, 2)]                                                                           \r\n                                                                                                                                            \r\n tf.split_2 (TFOpLambda)                      [(1, 3, 15, 20, 2),            0               ['tf.math.sigmoid_2[0][0]']                    \r\n                                               (1, 3, 15, 20, 2),                                                                           \r\n                                               (1, 3, 15, 20, 2)]                                                                           \r\n                                                                                                                                            \r\n tf.math.multiply (TFOpLambda)                (1, 3, 60, 80, 2)              0               ['tf.split[0][0]']                             \r\n                                                                                                                                            \r\n tf.math.pow (TFOpLambda)                     (1, 3, 60, 80, 2)              0               ['tf.split[0][1]']                             \r\n                                                                                                                                            \r\n tf.math.multiply_2 (TFOpLambda)              (1, 3, 30, 40, 2)              0               ['tf.split_1[0][0]']                           \r\n                                                                                                                                            \r\n tf.math.pow_1 (TFOpLambda)                   (1, 3, 30, 40, 2)              0               ['tf.split_1[0][1]']                           \r\n                                                                                                                                            \r\n tf.math.multiply_4 (TFOpLambda)              (1, 3, 15, 20, 2)              0               ['tf.split_2[0][0]']                           \r\n                                                                                                                                            \r\n tf.math.pow_2 (TFOpLambda)                   (1, 3, 15, 20, 2)              0               ['tf.split_2[0][1]']                           \r\n                                                                                                                                            \r\n tf.math.add_47 (TFOpLambda)                  (1, 3, 60, 80, 2)              0               ['tf.math.multiply[0][0]']                     \r\n                                                                                                                                            \r\n tf.math.multiply_1 (TFOpLambda)              (1, 3, 60, 80, 2)              0               ['tf.math.pow[0][0]']                          \r\n                                                                                                                                            \r\n tf.math.add_56 (TFOpLambda)                  (1, 3, 30, 40, 2)              0               ['tf.math.multiply_2[0][0]']                   \r\n                                                                                                                                            \r\n tf.math.multiply_3 (TFOpLambda)              (1, 3, 30, 40, 2)              0               ['tf.math.pow_1[0][0]']                        \r\n                                                                                                                                            \r\n tf.math.add_60 (TFOpLambda)                  (1, 3, 15, 20, 2)              0               ['tf.math.multiply_4[0][0]']                   \r\n                                                                                                                                            \r\n tf.math.multiply_5 (TFOpLambda)              (1, 3, 15, 20, 2)              0               ['tf.math.pow_2[0][0]']                        \r\n                                                                                                                                            \r\n tf.concat_12 (TFOpLambda)                    (1, 3, 60, 80, 6)              0               ['tf.math.add_47[0][0]',                       \r\n                                                                                              'tf.math.multiply_1[0][0]',                   \r\n                                                                                              'tf.split[0][2]']                             \r\n                                                                                                                                            \r\n tf.concat_15 (TFOpLambda)                    (1, 3, 30, 40, 6)              0               ['tf.math.add_56[0][0]',                       \r\n                                                                                              'tf.math.multiply_3[0][0]',                   \r\n                                                                                              'tf.split_1[0][2]']                           \r\n                                                                                                                                            \r\n tf.concat_16 (TFOpLambda)                    (1, 3, 15, 20, 6)              0               ['tf.math.add_60[0][0]',                       \r\n                                                                                              'tf.math.multiply_5[0][0]',                   \r\n                                                                                              'tf.split_2[0][2]']                           \r\n                                                                                                                                            \r\n tf.compat.v1.transpose_2 (TFOpLambda)        (1, 3, 60, 80, 6)              0               ['tf.concat_12[0][0]']                         \r\n                                                                                                                                            \r\n tf.compat.v1.transpose_5 (TFOpLambda)        (1, 3, 30, 40, 6)              0               ['tf.concat_15[0][0]']                         \r\n                                                                                                                                            \r\n tf.compat.v1.transpose_8 (TFOpLambda)        (1, 3, 15, 20, 6)              0               ['tf.concat_16[0][0]']                         \r\n                                                                                                                                            \r\n tf.reshape_1 (TFOpLambda)                    (1, 14400, 6)                  0               ['tf.compat.v1.transpose_2[0][0]']             \r\n                                                                                                                                            \r\n tf.reshape_3 (TFOpLambda)                    (1, 3600, 6)                   0               ['tf.compat.v1.transpose_5[0][0]']             \r\n                                                                                                                                            \r\n tf.reshape_5 (TFOpLambda)                    (1, 900, 6)                    0               ['tf.compat.v1.transpose_8[0][0]']             \r\n                                                                                                                                            \r\n tf.concat_17 (TFOpLambda)                    (1, 18900, 6)                  0               ['tf.reshape_1[0][0]',                         \r\n                                                                                              'tf.reshape_3[0][0]',                         \r\n                                                                                              'tf.reshape_5[0][0]']                         \r\n                                                                                                                                            \r\n tf.strided_slice (TFOpLambda)                (1, 18900, 4)                  0               ['tf.concat_17[0][0]']                         \r\n                                                                                                                                            \r\n tf.compat.v1.gather_3 (TFOpLambda)           (1, 18900)                     0               ['tf.strided_slice[0][0]']                     \r\n                                                                                                                                            \r\n tf.compat.v1.gather_1 (TFOpLambda)           (1, 18900)                     0               ['tf.strided_slice[0][0]']                     \r\n                                                                                                                                            \r\n tf.compat.v1.gather_7 (TFOpLambda)           (1, 18900)                     0               ['tf.strided_slice[0][0]']                     \r\n                                                                                                                                            \r\n tf.compat.v1.gather_5 (TFOpLambda)           (1, 18900)                     0               ['tf.strided_slice[0][0]']                     \r\n                                                                                                                                            \r\n tf.strided_slice_1 (TFOpLambda)              (1, 18900, 1)                  0               ['tf.concat_17[0][0]']                         \r\n                                                                                                                                            \r\n tf.compat.v1.gather_2 (TFOpLambda)           (1, 18900)                     0               ['tf.strided_slice[0][0]']                     \r\n                                                                                                                                            \r\n tf.math.divide_1 (TFOpLambda)                (1, 18900)                     0               ['tf.compat.v1.gather_3[0][0]']                \r\n                                                                                                                                            \r\n tf.compat.v1.gather (TFOpLambda)             (1, 18900)                     0               ['tf.strided_slice[0][0]']                     \r\n                                                                                                                                            \r\n tf.math.divide (TFOpLambda)                  (1, 18900)                     0               ['tf.compat.v1.gather_1[0][0]']                \r\n                                                                                                                                            \r\n tf.compat.v1.gather_6 (TFOpLambda)           (1, 18900)                     0               ['tf.strided_slice[0][0]']                     \r\n                                                                                                                                            \r\n tf.math.divide_3 (TFOpLambda)                (1, 18900)                     0               ['tf.compat.v1.gather_7[0][0]']                \r\n                                                                                                                                            \r\n tf.compat.v1.gather_4 (TFOpLambda)           (1, 18900)                     0               ['tf.strided_slice[0][0]']                     \r\n                                                                                                                                            \r\n tf.math.divide_2 (TFOpLambda)                (1, 18900)                     0               ['tf.compat.v1.gather_5[0][0]']                \r\n                                                                                                                                            \r\n tf.compat.v1.transpose_9 (TFOpLambda)        (1, 1, 18900)                  0               ['tf.strided_slice_1[0][0]']                   \r\n                                                                                                                                            \r\n tf.math.subtract_1 (TFOpLambda)              (1, 18900)                     0               ['tf.compat.v1.gather_2[0][0]',                \r\n                                                                                              'tf.math.divide_1[0][0]']                     \r\n                                                                                                                                            \r\n tf.math.subtract (TFOpLambda)                (1, 18900)                     0               ['tf.compat.v1.gather[0][0]',                  \r\n                                                                                              'tf.math.divide[0][0]']                       \r\n                                                                                                                                            \r\n tf.math.add_62 (TFOpLambda)                  (1, 18900)                     0               ['tf.compat.v1.gather_6[0][0]',                \r\n                                                                                              'tf.math.divide_3[0][0]']                     \r\n                                                                                                                                            \r\n tf.math.add_61 (TFOpLambda)                  (1, 18900)                     0               ['tf.compat.v1.gather_4[0][0]',                \r\n                                                                                              'tf.math.divide_2[0][0]']                     \r\n                                                                                                                                            \r\n tf.reshape_7 (TFOpLambda)                    (1, 18900, 1)                  0               ['tf.math.subtract_1[0][0]']                   \r\n                                                                                                                                            \r\n tf.reshape_6 (TFOpLambda)                    (1, 18900, 1)                  0               ['tf.math.subtract[0][0]']                     \r\n                                                                                                                                            \r\n tf.reshape_9 (TFOpLambda)                    (1, 18900, 1)                  0               ['tf.math.add_62[0][0]']                       \r\n                                                                                                                                            \r\n tf.reshape_8 (TFOpLambda)                    (1, 18900, 1)                  0               ['tf.math.add_61[0][0]']                       \r\n                                                                                                                                            \r\n tf.compat.v1.gather_9 (TFOpLambda)           (1, 1, 18900)                  0               ['tf.compat.v1.transpose_9[0][0]']             \r\n                                                                                                                                            \r\n tf.concat_18 (TFOpLambda)                    (1, 18900, 4)                  0               ['tf.reshape_7[0][0]',                         \r\n                                                                                              'tf.reshape_6[0][0]',                         \r\n                                                                                              'tf.reshape_9[0][0]',                         \r\n                                                                                              'tf.reshape_8[0][0]']                         \r\n                                                                                                                                            \r\n tf.compat.v1.squeeze_1 (TFOpLambda)          (1, 18900)                     0               ['tf.compat.v1.gather_9[0][0]']                \r\n                                                                                                                                            \r\n tf.compat.v1.gather_8 (TFOpLambda)           (1, 18900, 4)                  0               ['tf.concat_18[0][0]']                         \r\n                                                                                                                                            \r\n tf.compat.v1.gather_10 (TFOpLambda)          (1, 18900)                     0               ['tf.compat.v1.squeeze_1[0][0]']               \r\n                                                                                                                                            \r\n tf.compat.v1.squeeze (TFOpLambda)            (18900, 4)                     0               ['tf.compat.v1.gather_8[0][0]']                \r\n                                                                                                                                            \r\n tf.compat.v1.squeeze_2 (TFOpLambda)          (18900,)                       0               ['tf.compat.v1.gather_10[0][0]']               \r\n                                                                                                                                            \r\n tf.image.non_max_suppression (TFOpLambda)    (None,)                        0               ['tf.compat.v1.squeeze[0][0]',                 \r\n                                                                                              'tf.compat.v1.squeeze_2[0][0]']               \r\n                                                                                                                                            \r\n tf.cast (TFOpLambda)                         (None,)                        0               ['tf.image.non_max_suppression[0][0]']         \r\n                                                                                                                                            \r\n tf.compat.v1.transpose_10 (TFOpLambda)       (None, 1)                      0               ['tf.cast[0][0]']                              \r\n                                                                                                                                            \r\n tf.compat.v1.pad_23 (TFOpLambda)             (None, 2)                      0               ['tf.compat.v1.transpose_10[0][0]']            \r\n                                                                                                                                            \r\n tf.compat.v1.pad_24 (TFOpLambda)             (None, 3)                      0               ['tf.compat.v1.pad_23[0][0]']                  \r\n                                                                                                                                            \r\n tf.math.multiply_6 (TFOpLambda)              (None, 3)                      0               ['tf.compat.v1.pad_24[0][0]']                  \r\n                                                                                                                                            \r\n tf.math.add_63 (TFOpLambda)                  (None, 3)                      0               ['tf.math.multiply_6[0][0]']                   \r\n                                                                                                                                            \r\n tf.compat.v1.gather_13 (TFOpLambda)          (None, 2)                      0               ['tf.math.multiply_6[0][0]']                   \r\n                                                                                                                                            \r\n tf.math.floormod (TFOpLambda)                (None, 3)                      0               ['tf.math.add_63[0][0]']                       \r\n                                                                                                                                            \r\n tf.math.add_64 (TFOpLambda)                  (None, 2)                      0               ['tf.compat.v1.gather_13[0][0]']               \r\n                                                                                                                                            \r\n tf.compat.v1.gather_nd (TFOpLambda)          (None,)                        0               ['tf.compat.v1.transpose_9[0][0]',             \r\n                                                                                              'tf.math.floormod[0][0]']                     \r\n                                                                                                                                            \r\n tf.math.floormod_1 (TFOpLambda)              (None, 2)                      0               ['tf.math.add_64[0][0]']                       \r\n                                                                                                                                            \r\n tf.compat.v1.transpose_11 (TFOpLambda)       (None,)                        0               ['tf.compat.v1.gather_nd[0][0]']               \r\n                                                                                                                                            \r\n tf.compat.v1.gather_11 (TFOpLambda)          (None,)                        0               ['tf.math.multiply_6[0][0]']                   \r\n                                                                                                                                            \r\n tf.compat.v1.gather_12 (TFOpLambda)          (None,)                        0               ['tf.math.multiply_6[0][0]']                   \r\n                                                                                                                                            \r\n tf.compat.v1.gather_nd_1 (TFOpLambda)        (None, 4)                      0               ['tf.concat_18[0][0]',                         \r\n                                                                                              'tf.math.floormod_1[0][0]']                   \r\n                                                                                                                                            \r\n tf.reshape_10 (TFOpLambda)                   (None, 1)                      0               ['tf.compat.v1.transpose_11[0][0]']            \r\n                                                                                                                                            \r\n tf.reshape_11 (TFOpLambda)                   (None, 1)                      0               ['tf.compat.v1.gather_11[0][0]']               \r\n                                                                                                                                            \r\n tf.reshape_12 (TFOpLambda)                   (None, 1)                      0               ['tf.compat.v1.gather_12[0][0]']               \r\n                                                                                                                                            \r\n tf.cast_1 (TFOpLambda)                       (None, 4)                      0               ['tf.compat.v1.gather_nd_1[0][0]']             \r\n                                                                                                                                            \r\n tf.strided_slice_2 (TFOpLambda)              (None, 1)                      0               ['tf.reshape_10[0][0]']                        \r\n                                                                                                                                            \r\n tf.concat_19 (TFOpLambda)                    (None, 6)                      0               ['tf.reshape_11[0][0]',                        \r\n                                                                                              'tf.reshape_12[0][0]',                        \r\n                                                                                              'tf.cast_1[0][0]']                            \r\n                                                                                                                                            \r\n============================================================================================================================================\r\nTotal params: 0\r\nTrainable params: 0\r\nNon-trainable params: 0\r\n____________________________________________________________________________________________________________________________________________\r\n\r\n"
  - delay: 300
    content: "\e[07msaved_model output started\e[0m ==========================================================\r\n"
  - delay: 120
    content: "\e[32msaved_model output complete!\e[0m\r\nWARNING:absl:Please consider providing the trackable_obj argument in the from_concrete_functions. Providing without the trackable_obj argument is deprecated and it will use the deprecated conversion path.\r\n"
  - delay: 300
    content: "\e[32mFloat32 tflite output complete!\e[0m\r\n"
  - delay: 300
    content: "\e[32mFloat16 tflite output complete!\e[0m\r\n"
  - delay: 300
    content: "\e]0;xxxxx@ubuntu2004:~/demo\e\\\e]7;file://ubuntu2004/home/xxxxx/demo\e\\\e]0;xxxxx@ubuntu2004: ~/demo\a\e[01;32m\e[01;34m~/demo\e[00m$ "
  - delay: 3000
    content: l
  - delay: 100
    content: s
  - delay: 100
    content: ' '
  - delay: 100
    content: '-'
  - delay: 100
    content: l
  - delay: 100
    content: ' '
  - delay: 100
    content: s
  - delay: 100
    content: a
  - delay: 100
    content: v
  - delay: 100
    content: e
  - delay: 100
    content: d
  - delay: 100
    content: _
  - delay: 100
    content: m
  - delay: 100
    content: o
  - delay: 100
    content: d
  - delay: 100
    content: e
  - delay: 100
    content: l
  - delay: 3000
    content: "\r\n"
  - delay: 5
    content: "total 59860\r\ndrwxr-xr-x 2 xxxxx xxxxx     4096 10月 16 17:13 \e[0m\e[01;34massets\e[0m\r\n-rw-rw-r-- 1 xxxxx xxxxx 12404108 10月 17 01:29 model_float16.tflite\r\n-rw-rw-r-- 1 xxxxx xxxxx 24697632 10月 17 01:29 model_float32.tflite\r\n-rw-rw-r-- 1 xxxxx xxxxx 24181385 10月 17 01:29 saved_model.pb\r\ndrwxr-xr-x 2 xxxxx xxxxx     4096 10月 17 01:29 \e[01;34mvariables\e[0m\r\n\e]0;xxxxx@ubuntu2004:~/demo\e\\\e]7;file://ubuntu2004/home/xxxxx/demo\e\\\e]0;xxxxx@ubuntu2004: ~/demo\a\e[01;32m\e[01;34m~/demo\e[00m$ "
  - delay: 3000
    content: "logout\r\n"
